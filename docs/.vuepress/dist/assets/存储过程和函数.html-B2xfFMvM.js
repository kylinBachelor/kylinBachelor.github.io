import{_ as i,c as a,a as n,o as l}from"./app-C08HRChj.js";const e={};function t(p,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="存储过程" tabindex="-1"><a class="header-anchor" href="#存储过程"><span>存储过程</span></a></h1><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h2><ol><li><p>存储过程就是一组经过预编译的SQL语句的封装。</p></li><li><p>执行过程：存储过程预先存储在 MySQL 服务器上，需要执行的时候，客户端只需要向服务器端发出调用存储过程的命令，服务器就可以把预先存储好的这一系列 SQL 语句全部执行。</p></li><li><p>好处：</p><ol><li>简化操作，提高了sql语句的重用性，减少了开发程序员的压力</li><li>减少操作过程中的失误，提高效率</li><li>减少网络传输量（客户端不需要把所有的 SQL 语句通过网络发给服务器）</li><li>减少了 SQL 语句暴露在网上的风险，也提高了数据查询的安全性</li></ol></li></ol><h2 id="_2-分类" tabindex="-1"><a class="header-anchor" href="#_2-分类"><span>2. 分类</span></a></h2><p>存储过程的参数类型可以是IN、OUT和INOUT, IN、OUT、INOUT 都可以在一个存储过程中带多个</p><ol><li>没有参数（无参数无返回）</li><li>仅仅带 IN 类型（有参数无返回）</li><li>仅仅带 OUT 类型（无参数有返回）</li><li>既带 IN 又带 OUT（有参数有返回）</li><li>带 INOUT（有参数有返回）</li></ol><h2 id="_3-创建存储过程" tabindex="-1"><a class="header-anchor" href="#_3-创建存储过程"><span>3. 创建存储过程</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PROCEDURE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 存储过程名(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">IN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OUT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|INOUT 参数名 参数类型,...)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[characteristics ...]</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	存储过程体</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-说明" tabindex="-1"><a class="header-anchor" href="#_3-1-说明"><span>3.1 说明</span></a></h3><ol><li>参数前面的符号的意思 <ol><li>IN ：当前参数为输入参数，也就是表示入参；存储过程只是读取这个参数的值。如果没有定义参数种类， 默认就是 IN ，表示输入参数。</li><li>OUT: 当前参数为输出参数，也就是表示出参；执行完成之后，调用这个存储过程的客户端或者应用程序就可以读取这个参数返回的值了。</li><li>INOUT ：当前参数既可以为输入参数，也可以为输出参数。</li></ol></li></ol><p>2、形参类型可以是 MySQL数据库中的任意类型。</p><p>3、 characteristics 表示创建存储过程时指定的对存储过程的约束条件，其取值信息如下</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LANGUAGE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SQL</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">| [NOT] DETERMINISTIC</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">| { CONTAINS </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SQL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NO</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SQL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | READS </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SQL</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATA</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | MODIFIES </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SQL</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATA</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">| </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SQL</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SECURITY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> { DEFINER | INVOKER }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">| COMMENT </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">string</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>LANGUAGE SQL</code> ：说明存储过程执行体是由SQL语句组成的，当前系统支持的语言为SQL</li><li><code>[NOT] DETERMINISTIC</code> ：指明存储过程执行的结果是否确定。DETERMINISTIC表示结果是确定的。每次执行存储过程时，相同的输入会得到相同的输出。NOT DETERMINISTIC表示结果是不确定的，相同的输入可能得到不同的输出。如果没有指定任意一个值，默认为NOT DETERMINISTIC。</li><li><code>{ CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA } </code>：指明子程序使用SQL语句的限制。 <ul><li>CONTAINS SQL表示当前存储过程的子程序包含SQL语句，但是并不包含读写数据的SQL语句；</li><li>NO SQL表示当前存储过程的子程序中不包含任何SQL语句；</li><li>READS SQL DATA表示当前存储过程的子程序中包含读数据的SQL语句；</li><li>MODIFIES SQL DATA表示当前存储过程的子程序中包含写数据的SQL语句。</li><li>默认情况下，系统会指定为CONTAINS SQL。</li></ul></li><li><code>SQL SECURITY { DEFINER | INVOKER } </code>：执行当前存储过程的权限，即指明哪些用户能够执行当前存储过程。 <ul><li>DEFINER 表示只有当前存储过程的创建者或者定义者才能执行当前存储过程；</li><li>INVOKER 表示拥有当前存储过程的访问权限的用户能够执行当前存储过程。</li></ul></li></ul><ol start="4"><li><p>存储过程体中可以有多条 SQL 语句，如果仅仅一条SQL 语句，则可以省略 BEGIN 和 END,编写存储过程并不是一件简单的事情，可能存储过程中需要复杂的 SQL 语句。</p><ul><li><p>BEGIN…END：BEGIN…END 中间包含了多个语句，每个语句都以（;）号为结束符。</p></li><li><p>. DECLARE：DECLARE 用来声明变量，使用的位置在于 BEGIN…END 语句中间，而且需要在其他语句使用之前进</p><p>行变量的声明。</p></li><li><p>SET：赋值语句，用于对变量进行赋值。</p></li><li><p>SELECT… INTO：把从数据表中查询的结果存放到变量中，也就是为变量赋值。</p></li></ul></li><li><p>需要设置新的结束标记</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER 新的结束标记</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为MySQL默认的语句结束符号为分号‘;’。为了避免与存储过程中SQL语句结束符相冲突，需要使用</p><p>DELIMITER改变存储过程的结束符。</p><p>比如：“DELIMITER //”语句的作用是将MySQL的结束符设置为//，并以“END //”结束存储过程。存储过程定</p><p>义完毕之后再使用“DELIMITER ;”恢复默认结束符。DELIMITER也可以指定其他符号作为结束符。</p><p>当使用DELIMITER命令时，应该避免使用反斜杠（‘\\’）字符，因为反斜线是MySQL的转义字符。</p><p>示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER $</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PROCEDURE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 存储过程名(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">IN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OUT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|INOUT 参数名 参数类型,...)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[characteristics ...]</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	sql语句1;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	sql语句2;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">END</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> $</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_4-举例" tabindex="-1"><a class="header-anchor" href="#_4-举例"><span>4. 举例</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 第一个</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER $</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PROCEDURE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> select_all_data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">	SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emps;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">END</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> $</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER ;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 第二个</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PROCEDURE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> avg_employee_salary </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">	SELECT</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AVG</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(salary) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> avg_salary </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emps;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">END</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> //</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER ;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 第三个</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">//</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PROCEDURE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> show_someone_salary(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">IN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> empname </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">VARCHAR</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">	BEGIN</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">		SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> salary </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emps </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ename </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> empname;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">	END</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> //</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">DELIMITER ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-调用存储过程" tabindex="-1"><a class="header-anchor" href="#_5-调用存储过程"><span>5. 调用存储过程</span></a></h2><p>存储过程有多种调用方法。存储过程必须使用CALL语句调用，并且存储过程和数据库相关，如果要执行其他数据库中的存储过程，需要指定数据库名称，例如CALL dbname.procname。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CALL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 存储过程名(实参列表</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-1-调用格式" tabindex="-1"><a class="header-anchor" href="#_5-1-调用格式"><span>5.1 调用格式</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 1、调用in模式的参数：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CALL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sp1(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">值</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 2、调用out模式的参数：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SET</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> @name;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CALL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sp1(@name);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> @name;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 3. 调用inout模式的参数：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SET</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> @name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">值;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CALL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sp1(@name);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> @name;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h1><h2 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法"><span>1. 语法</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FUNCTION</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> 函数名</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(参数名 参数类型,...)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">RETURNS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 返回值类型</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[characteristics ...]</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		函数体 #函数体中肯定有 </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">RETURN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 语句</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25)]))}const d=i(e,[["render",t],["__file","存储过程和函数.html.vue"]]),k=JSON.parse('{"path":"/article/technology/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0.html","title":"存储过程与函数","lang":"zh-CN","frontmatter":{"title":"存储过程与函数","tags":["MySQL","SQL"],"description":"存储过程","createTime":"2024/11/30 14:15:41","head":[["meta",{"property":"og:url","content":"https://kylinBachelor.github.io/article/technology/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"攻城狮"}],["meta",{"property":"og:title","content":"存储过程与函数"}],["meta",{"property":"og:description","content":"存储过程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-13T08:50:08.000Z"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"SQL"}],["meta",{"property":"article:modified_time","content":"2025-02-13T08:50:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"存储过程与函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T08:50:08.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":5.07,"words":1520},"git":{"updatedTime":1739436608000},"filePathRelative":"article/technology/存储过程和函数/存储过程和函数.md","categoryList":[{"id":"92a2b5","sort":10004,"name":"article"},{"id":"4b8d8b","sort":10005,"name":"technology"},{"id":"835af0","sort":10007,"name":"存储过程和函数"}],"bulletin":false}');export{d as comp,k as data};
