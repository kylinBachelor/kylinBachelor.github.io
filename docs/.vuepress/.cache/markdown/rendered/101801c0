{"content":"<h1 id=\"获取class对象的三种方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取class对象的三种方式\"><span>获取Class对象的三种方式</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第一种方式  类名.class</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第二种方式 对象.getClass();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">User</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第三种方式  Class.forName(\"类全路径\");  类的静态块会立马被执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> strClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">java.lang.String</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1 id=\"获取类声明的字段\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取类声明的字段\"><span>获取类声明的字段</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 获得类声明的字段，获得public  private的都可以，但是无法获得父类型的字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fileds</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 只获得public字段，包括父类的public字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 若要获得父类的所有字段先获得父类对象然后获得父类的所有字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fieldsFu</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getSuperFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"方法概述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#方法概述\"><span>方法概述</span></a></h2>\n<p>总的来说，带Declared的可获取到所有(包括父类)public，不带Declared的可获取到本类public的字段</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">              getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">             getMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDecalreMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">         getConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getDnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">           getnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"C:/Users/kylinBachelor/Desktop/kylinBachelor.github.io/docs/notes/Java/Java反射/index.md","filePathRelative":"notes/Java/Java反射/index.md","frontmatter":{"title":"Java反射-Reflection","aliases":null,"tags":["Java","反射"],"description":"Java反射","createTime":"2024/11/30 14:15:41","draft":false},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"获取class对象的三种方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取class对象的三种方式\"><span>获取Class对象的三种方式</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第一种方式  类名.class</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第二种方式 对象.getClass();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">User</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第三种方式  Class.forName(\"类全路径\");  类的静态块会立马被执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> strClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">java.lang.String</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1 id=\"获取类声明的字段\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取类声明的字段\"><span>获取类声明的字段</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 获得类声明的字段，获得public  private的都可以，但是无法获得父类型的字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fileds</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 只获得public字段，包括父类的public字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 若要获得父类的所有字段先获得父类对象然后获得父类的所有字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fieldsFu</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getSuperFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"方法概述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#方法概述\"><span>方法概述</span></a></h2>\n<p>总的来说，带Declared的可获取到所有(包括父类)public，不带Declared的可获取到本类public的字段</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">              getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">             getMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDecalreMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">         getConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getDnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">           getnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h1 id=\"获取class对象的三种方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取class对象的三种方式\"><span>获取Class对象的三种方式</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第一种方式  类名.class</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第二种方式 对象.getClass();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">User</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> User</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> user</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 第三种方式  Class.forName(\"类全路径\");  类的静态块会立马被执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> strClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">java.lang.String</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1 id=\"获取类声明的字段\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取类声明的字段\"><span>获取类声明的字段</span></a></h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 获得类声明的字段，获得public  private的都可以，但是无法获得父类型的字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fileds</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 只获得public字段，包括父类的public字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 若要获得父类的所有字段先获得父类对象然后获得父类的所有字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Field</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> fieldsFu</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> userClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getSuperFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"方法概述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#方法概述\"><span>方法概述</span></a></h2>\n<p>总的来说，带Declared的可获取到所有(包括父类)public，不带Declared的可获取到本类public的字段</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">              getFields</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getField</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclaredMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">             getMethods</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDecalreMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">               getMethod</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">         getConstructors</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getConstructor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">          getDnnotations</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getDeclareAnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">           getnnotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"# 获取Class对象的三种方式\r\n\r\n```java\r\n// 第一种方式  类名.class\r\nClass<User> userClass = User.class;\r\n// 第二种方式 对象.getClass();\r\nUser user  = new User();\r\nClass<?> userClass = user.getClass();\r\n// 第三种方式  Class.forName(\"类全路径\");  类的静态块会立马被执行\r\nClass<?> strClass = Class.forName(\"java.lang.String\");\r\n```\r\n\r\n# 获取类声明的字段\r\n\r\n```java\r\n// 获得类声明的字段，获得public  private的都可以，但是无法获得父类型的字段\r\nField[] fileds = userClass.getDeclaredFields();\r\n// 只获得public字段，包括父类的public字段\r\nField[] fields = userClass.getFields();\r\n// 若要获得父类的所有字段先获得父类对象然后获得父类的所有字段\r\nField[] fieldsFu = userClass.getSuperFields().getDeclaredFields();\r\n```\r\n\r\n## 方法概述\r\n\r\n总的来说，带Declared的可获取到所有(包括父类)public，不带Declared的可获取到本类public的字段\r\n\r\n```java\r\ngetDeclaredFields();              getFields();\r\ngetDeclaredField();               getField();\r\ngetDeclaredMethods();             getMethods();\r\ngetDecalreMethod();               getMethod();\r\ngetDeclareConstructors();         getConstructors();\r\ngetDeclareConstructor();          getConstructor();\r\ngetDeclareAnnotations();          getDnnotations();\r\ngetDeclareAnnotation();           getnnotation();\r\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"获取Class对象的三种方式","headers":[{"level":2,"title":"方法概述","slug":"方法概述","link":"#方法概述","children":[]}]}}
