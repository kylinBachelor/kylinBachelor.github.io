{"content":"<h1 id=\"servletcontextinitializer\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#servletcontextinitializer\"><span>ServletContextInitializer</span></a></h1>\n<blockquote>\n<p>ServletContextInitializer 是 SpringBoot 针对嵌入式容器的 顶层监听</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">FunctionalInterface</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * Configure the given {@link ServletContext} with any servlets, filters, listeners</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * context-params and attributes necessary for initialization.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@param</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> the {@code ServletContext} to initialize</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@throws</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletException</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> if any call against the given {@code ServletContext}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * throws a {@code ServletException}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>ServletContextInitializer 生命周期由 Spring 进行管理而非  容器</li>\n<li>ServletContextInitializer 是由 TomcatStarter 桥接过来</li>\n</ol>\n<p><code v-pre>以下都是以Tomcat容器为例</code></p>\n<h2 id=\"_1-tomcatstarter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-tomcatstarter\"><span>1. TomcatStarter</span></a></h2>\n<p>在SpringBoot中使用的是嵌入式容器，他提供了SCI引擎的直接实现，就是TomcatStarter</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> TomcatStarter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> static</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Log</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> LogFactory</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getLog</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">TomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> volatile</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Exception</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 重要的接口  ServletContextInitializer</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">\tTomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 显然这个SCI没有@HandleTypes注解，因此classes中永远都是空，因此这个SCI只是为了拿到容器的ServletContext传递给\t   ServletContextInitializer，ServletContextInitializer中拿到ServletContext可以做任何想要做的事情（必须是容器启动完成之前）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tpublic</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">>></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\ttry</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tfor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContextInitializer</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializer</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> :</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tinitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\tcatch</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Exception </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// Prevent Tomcat from logging and re-throwing when we know we can</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// deal with it in the main thread, but log for information here.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tif</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">isErrorEnabled</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">())</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tlogger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">error</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">Error starting Tomcat context. Exception: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">. Message: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\t\t\t\t\t\t+</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getMessage</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">\tException </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getStartUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\treturn</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-web嵌入式容器的启动方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-web嵌入式容器的启动方式\"><span>2. web嵌入式容器的启动方式</span></a></h2>\n<p>详细了解请看web嵌入式容器</p>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213110425563.png\" alt=\"image-20250213110425563\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213110425563</figcaption></figure>\n<p>当编程式启动容器时会添加一个SCI，因此在SpringBoot中启动时会传入TomcatStarter,在传入之前会拿到所有实现了ServletContextinitializer的类，new TomcatStarter(ServletContextinitializer实现的类)。</p>\n<p>然后Tomcat容器一开始启动就会将ServletContext上下文传入到ServletContextinitializer实现类中。然后ServletContextinitializer实现类就可以干一些自己相干的事情（<code v-pre>必须在容器启动完成之前，因为Servlet的机制就是在容器启动之后不允许在对ServletContext进行修改</code>）。</p>\n<p>因此在SpringBoot中如果要添加过滤器，<code v-pre>监听器等组件时可以利用ServletContextinitializer接口或者ServletContextinitializer接口的实现类</code></p>\n<h2 id=\"_3-springboot中提供的servletcontextinitializer接口实现类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-springboot中提供的servletcontextinitializer接口实现类\"><span>3. SpringBoot中提供的ServletContextinitializer接口实现类</span></a></h2>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213111216209.png\" alt=\"image-20250213111216209\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213111216209</figcaption></figure>\n<ol>\n<li>RegistrationBean 实现 Ordered 接口、可用于维护内部机制排序支持</li>\n<li>ServletListenerRegistrationBean - 注册 Listener</li>\n<li>FilterRegistrationBean - 注册 Filter</li>\n<li>ServletRegistrationBean - 注册 Servlet</li>\n<li>DispatcherServletRegistrationBean - 专用注册 DispatcherServlet</li>\n</ol>\n<p><code v-pre>以上 ServletContextInitializer 是被 SpringBoot 手动调用的</code></p>\n<p>因此在SpringBoot中注册 <code v-pre>监听器</code>, <code v-pre>过滤器</code>,<code v-pre> servlet</code> 应使用SpringBoot提供的ServletContextinitializer的实现</p>\n<p>例如注册过滤器：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 自定义的过滤器类</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> MyFilter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterChain </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        System</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">out</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">println</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">执行过滤操作</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Configuration</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> WebFilterConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 过滤器注册</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> myFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;>();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addUrlPatterns</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/*</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setOrder</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"F:/my_source_code/kylinBachelor.github.io/docs/article/technology/SpringBoot接口之ServletContextInitializer/ServletContextInitializer.md","filePathRelative":"article/technology/SpringBoot接口之ServletContextInitializer/ServletContextInitializer.md","frontmatter":{"title":"SpringBoot接口之ServletContextInitializer","tags":["SpringBoot"],"createTime":"2025/02/15 14:15:41"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"servletcontextinitializer\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#servletcontextinitializer\"><span>ServletContextInitializer</span></a></h1>\n<blockquote>\n<p>ServletContextInitializer 是 SpringBoot 针对嵌入式容器的 顶层监听</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">FunctionalInterface</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * Configure the given {@link ServletContext} with any servlets, filters, listeners</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * context-params and attributes necessary for initialization.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@param</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> the {@code ServletContext} to initialize</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@throws</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletException</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> if any call against the given {@code ServletContext}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * throws a {@code ServletException}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>ServletContextInitializer 生命周期由 Spring 进行管理而非  容器</li>\n<li>ServletContextInitializer 是由 TomcatStarter 桥接过来</li>\n</ol>\n<p><code v-pre>以下都是以Tomcat容器为例</code></p>\n<h2 id=\"_1-tomcatstarter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-tomcatstarter\"><span>1. TomcatStarter</span></a></h2>\n<p>在SpringBoot中使用的是嵌入式容器，他提供了SCI引擎的直接实现，就是TomcatStarter</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> TomcatStarter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> static</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Log</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> LogFactory</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getLog</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">TomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> volatile</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Exception</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 重要的接口  ServletContextInitializer</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">\tTomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 显然这个SCI没有@HandleTypes注解，因此classes中永远都是空，因此这个SCI只是为了拿到容器的ServletContext传递给\t   ServletContextInitializer，ServletContextInitializer中拿到ServletContext可以做任何想要做的事情（必须是容器启动完成之前）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tpublic</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">>></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\ttry</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tfor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContextInitializer</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializer</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> :</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tinitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\tcatch</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Exception </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// Prevent Tomcat from logging and re-throwing when we know we can</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// deal with it in the main thread, but log for information here.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tif</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">isErrorEnabled</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">())</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tlogger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">error</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">Error starting Tomcat context. Exception: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">. Message: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\t\t\t\t\t\t+</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getMessage</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">\tException </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getStartUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\treturn</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-web嵌入式容器的启动方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-web嵌入式容器的启动方式\"><span>2. web嵌入式容器的启动方式</span></a></h2>\n<p>详细了解请看web嵌入式容器</p>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213110425563.png\" alt=\"image-20250213110425563\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213110425563</figcaption></figure>\n<p>当编程式启动容器时会添加一个SCI，因此在SpringBoot中启动时会传入TomcatStarter,在传入之前会拿到所有实现了ServletContextinitializer的类，new TomcatStarter(ServletContextinitializer实现的类)。</p>\n<p>然后Tomcat容器一开始启动就会将ServletContext上下文传入到ServletContextinitializer实现类中。然后ServletContextinitializer实现类就可以干一些自己相干的事情（<code v-pre>必须在容器启动完成之前，因为Servlet的机制就是在容器启动之后不允许在对ServletContext进行修改</code>）。</p>\n<p>因此在SpringBoot中如果要添加过滤器，<code v-pre>监听器等组件时可以利用ServletContextinitializer接口或者ServletContextinitializer接口的实现类</code></p>\n<h2 id=\"_3-springboot中提供的servletcontextinitializer接口实现类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-springboot中提供的servletcontextinitializer接口实现类\"><span>3. SpringBoot中提供的ServletContextinitializer接口实现类</span></a></h2>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213111216209.png\" alt=\"image-20250213111216209\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213111216209</figcaption></figure>\n<ol>\n<li>RegistrationBean 实现 Ordered 接口、可用于维护内部机制排序支持</li>\n<li>ServletListenerRegistrationBean - 注册 Listener</li>\n<li>FilterRegistrationBean - 注册 Filter</li>\n<li>ServletRegistrationBean - 注册 Servlet</li>\n<li>DispatcherServletRegistrationBean - 专用注册 DispatcherServlet</li>\n</ol>\n<p><code v-pre>以上 ServletContextInitializer 是被 SpringBoot 手动调用的</code></p>\n<p>因此在SpringBoot中注册 <code v-pre>监听器</code>, <code v-pre>过滤器</code>,<code v-pre> servlet</code> 应使用SpringBoot提供的ServletContextinitializer的实现</p>\n<p>例如注册过滤器：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 自定义的过滤器类</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> MyFilter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterChain </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        System</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">out</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">println</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">执行过滤操作</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Configuration</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> WebFilterConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 过滤器注册</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> myFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;>();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addUrlPatterns</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/*</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setOrder</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h1 id=\"servletcontextinitializer\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#servletcontextinitializer\"><span>ServletContextInitializer</span></a></h1>\n<blockquote>\n<p>ServletContextInitializer 是 SpringBoot 针对嵌入式容器的 顶层监听</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">FunctionalInterface</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * Configure the given {@link ServletContext} with any servlets, filters, listeners</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * context-params and attributes necessary for initialization.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@param</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> the {@code ServletContext} to initialize</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * </span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">@throws</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletException</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> if any call against the given {@code ServletContext}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t * throws a {@code ServletException}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>ServletContextInitializer 生命周期由 Spring 进行管理而非  容器</li>\n<li>ServletContextInitializer 是由 TomcatStarter 桥接过来</li>\n</ol>\n<p><code v-pre>以下都是以Tomcat容器为例</code></p>\n<h2 id=\"_1-tomcatstarter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-tomcatstarter\"><span>1. TomcatStarter</span></a></h2>\n<p>在SpringBoot中使用的是嵌入式容器，他提供了SCI引擎的直接实现，就是TomcatStarter</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> TomcatStarter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> static</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Log</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> LogFactory</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getLog</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">TomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> final</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tprivate</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> volatile</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> Exception</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 重要的接口  ServletContextInitializer</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">\tTomcatStarter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">ServletContextInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[]</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 显然这个SCI没有@HandleTypes注解，因此classes中永远都是空，因此这个SCI只是为了拿到容器的ServletContext传递给\t   ServletContextInitializer，ServletContextInitializer中拿到ServletContext可以做任何想要做的事情（必须是容器启动完成之前）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tpublic</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">>></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletContext </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\ttry</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tfor</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContextInitializer</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> initializer</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> :</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">initializers</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tinitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\tcatch</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Exception </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">\t\t\tthis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// Prevent Tomcat from logging and re-throwing when we know we can</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t\t\t// deal with it in the main thread, but log for information here.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\t\tif</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">logger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">isErrorEnabled</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">())</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">\t\t\t\tlogger</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">error</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">Error starting Tomcat context. Exception: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getClass</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">().</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">. Message: </span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\t\t\t\t\t\t+</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> ex</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getMessage</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">\tException </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getStartUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">\t\treturn</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> this</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">startUpException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-web嵌入式容器的启动方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-web嵌入式容器的启动方式\"><span>2. web嵌入式容器的启动方式</span></a></h2>\n<p>详细了解请看web嵌入式容器</p>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213110425563.png\" alt=\"image-20250213110425563\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213110425563</figcaption></figure>\n<p>当编程式启动容器时会添加一个SCI，因此在SpringBoot中启动时会传入TomcatStarter,在传入之前会拿到所有实现了ServletContextinitializer的类，new TomcatStarter(ServletContextinitializer实现的类)。</p>\n<p>然后Tomcat容器一开始启动就会将ServletContext上下文传入到ServletContextinitializer实现类中。然后ServletContextinitializer实现类就可以干一些自己相干的事情（<code v-pre>必须在容器启动完成之前，因为Servlet的机制就是在容器启动之后不允许在对ServletContext进行修改</code>）。</p>\n<p>因此在SpringBoot中如果要添加过滤器，<code v-pre>监听器等组件时可以利用ServletContextinitializer接口或者ServletContextinitializer接口的实现类</code></p>\n<h2 id=\"_3-springboot中提供的servletcontextinitializer接口实现类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-springboot中提供的servletcontextinitializer接口实现类\"><span>3. SpringBoot中提供的ServletContextinitializer接口实现类</span></a></h2>\n<figure><img src=\"@source/article/technology/SpringBoot接口之ServletContextInitializer/assets/image-20250213111216209.png\" alt=\"image-20250213111216209\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213111216209</figcaption></figure>\n<ol>\n<li>RegistrationBean 实现 Ordered 接口、可用于维护内部机制排序支持</li>\n<li>ServletListenerRegistrationBean - 注册 Listener</li>\n<li>FilterRegistrationBean - 注册 Filter</li>\n<li>ServletRegistrationBean - 注册 Servlet</li>\n<li>DispatcherServletRegistrationBean - 专用注册 DispatcherServlet</li>\n</ol>\n<p><code v-pre>以上 ServletContextInitializer 是被 SpringBoot 手动调用的</code></p>\n<p>因此在SpringBoot中注册 <code v-pre>监听器</code>, <code v-pre>过滤器</code>,<code v-pre> servlet</code> 应使用SpringBoot提供的ServletContextinitializer的实现</p>\n<p>例如注册过滤器：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 自定义的过滤器类</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> MyFilter</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> implements</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterChain </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        System</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">out</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">println</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">执行过滤操作</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        chain</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">doFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Configuration</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> WebFilterConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    @</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 过滤器注册</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> myFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> new</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> FilterRegistrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;>();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">new</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> MyFilter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addUrlPatterns</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/*</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">        registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">setOrder</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> registrationBean</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"# ServletContextInitializer\r\n\r\n> ServletContextInitializer 是 SpringBoot 针对嵌入式容器的 顶层监听\r\n\r\n```java\r\n@FunctionalInterface\r\npublic interface ServletContextInitializer {\r\n\r\n\t/**\r\n\t * Configure the given {@link ServletContext} with any servlets, filters, listeners\r\n\t * context-params and attributes necessary for initialization.\r\n\t * @param servletContext the {@code ServletContext} to initialize\r\n\t * @throws ServletException if any call against the given {@code ServletContext}\r\n\t * throws a {@code ServletException}\r\n\t */\r\n\tvoid onStartup(ServletContext servletContext) throws ServletException;\r\n\r\n}\r\n```\r\n\r\n\r\n\r\n1. ServletContextInitializer 生命周期由 Spring 进行管理而非  容器\r\n2. ServletContextInitializer 是由 TomcatStarter 桥接过来\r\n\r\n`以下都是以Tomcat容器为例`\r\n\r\n\r\n\r\n## 1. TomcatStarter\r\n\r\n在SpringBoot中使用的是嵌入式容器，他提供了SCI引擎的直接实现，就是TomcatStarter\r\n\r\n```java\r\nclass TomcatStarter implements ServletContainerInitializer {\r\n\r\n\tprivate static final Log logger = LogFactory.getLog(TomcatStarter.class);\r\n\r\n\tprivate final ServletContextInitializer[] initializers;\r\n\r\n\tprivate volatile Exception startUpException;\r\n\r\n    // 重要的接口  ServletContextInitializer\r\n\tTomcatStarter(ServletContextInitializer[] initializers) {\r\n\t\tthis.initializers = initializers;\r\n\t}\r\n\r\n\t@Override\r\n    // 显然这个SCI没有@HandleTypes注解，因此classes中永远都是空，因此这个SCI只是为了拿到容器的ServletContext传递给\t   ServletContextInitializer，ServletContextInitializer中拿到ServletContext可以做任何想要做的事情（必须是容器启动完成之前）\r\n\tpublic void onStartup(Set<Class<?>> classes, ServletContext servletContext) throws ServletException {\r\n\t\ttry {\r\n\t\t\tfor (ServletContextInitializer initializer : this.initializers) {\r\n\t\t\t\tinitializer.onStartup(servletContext);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tthis.startUpException = ex;\r\n\t\t\t// Prevent Tomcat from logging and re-throwing when we know we can\r\n\t\t\t// deal with it in the main thread, but log for information here.\r\n\t\t\tif (logger.isErrorEnabled()) {\r\n\t\t\t\tlogger.error(\"Error starting Tomcat context. Exception: \" + ex.getClass().getName() + \". Message: \"\r\n\t\t\t\t\t\t+ ex.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tException getStartUpException() {\r\n\t\treturn this.startUpException;\r\n\t}\r\n\r\n}\r\n```\r\n\r\n\r\n\r\n## 2. web嵌入式容器的启动方式\r\n\r\n详细了解请看web嵌入式容器\r\n\r\n![image-20250213110425563](assets/image-20250213110425563.png)\r\n\r\n当编程式启动容器时会添加一个SCI，因此在SpringBoot中启动时会传入TomcatStarter,在传入之前会拿到所有实现了ServletContextinitializer的类，new TomcatStarter(ServletContextinitializer实现的类)。\r\n\r\n然后Tomcat容器一开始启动就会将ServletContext上下文传入到ServletContextinitializer实现类中。然后ServletContextinitializer实现类就可以干一些自己相干的事情（`必须在容器启动完成之前，因为Servlet的机制就是在容器启动之后不允许在对ServletContext进行修改`）。\r\n\r\n因此在SpringBoot中如果要添加过滤器，`监听器等组件时可以利用ServletContextinitializer接口或者ServletContextinitializer接口的实现类`\r\n\r\n\r\n\r\n## 3. SpringBoot中提供的ServletContextinitializer接口实现类\r\n\r\n![image-20250213111216209](assets/image-20250213111216209.png)\r\n\r\n\r\n\r\n1. RegistrationBean 实现 Ordered 接口、可用于维护内部机制排序支持\r\n2. ServletListenerRegistrationBean - 注册 Listener\r\n3. FilterRegistrationBean - 注册 Filter\r\n4. ServletRegistrationBean - 注册 Servlet\r\n5. DispatcherServletRegistrationBean - 专用注册 DispatcherServlet\r\n\r\n`以上 ServletContextInitializer 是被 SpringBoot 手动调用的`\r\n\r\n因此在SpringBoot中注册 `监听器`, `过滤器`,` servlet` 应使用SpringBoot提供的ServletContextinitializer的实现\r\n\r\n\r\n\r\n例如注册过滤器：\r\n\r\n```java\r\n// 自定义的过滤器类\r\npublic class MyFilter implements HttpFilter {\r\n    @Override\r\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\r\n        System.out.println(\"执行过滤操作\");\r\n        chain.doFilter(request, response);\r\n    }\r\n}\r\n\r\n\r\n@Configuration\r\npublic class WebFilterConfig {\r\n \r\n    @Bean\r\n    // 过滤器注册\r\n    public FilterRegistrationBean<MyFilter> myFilter() {\r\n        FilterRegistrationBean<MyFilter> registrationBean = new FilterRegistrationBean<>();\r\n        registrationBean.setFilter(new MyFilter());\r\n        registrationBean.addUrlPatterns(\"/*\");\r\n        registrationBean.setOrder(1);\r\n        return registrationBean;\r\n    }\r\n}\r\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"ServletContextInitializer","headers":[{"level":2,"title":"1. TomcatStarter","slug":"_1-tomcatstarter","link":"#_1-tomcatstarter","children":[]},{"level":2,"title":"2. web嵌入式容器的启动方式","slug":"_2-web嵌入式容器的启动方式","link":"#_2-web嵌入式容器的启动方式","children":[]},{"level":2,"title":"3. SpringBoot中提供的ServletContextinitializer接口实现类","slug":"_3-springboot中提供的servletcontextinitializer接口实现类","link":"#_3-springboot中提供的servletcontextinitializer接口实现类","children":[]}]}}
