{"content":"<h1 id=\"k8s集群架构组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#k8s集群架构组件\"><span>k8s集群架构组件</span></a></h1>\n<p><img src=\"@source/notes/K8S/2. 集群架构组件/assets/image-20240711160204601.png\" alt=\"image-20240711160204601\"></p>\n<h2 id=\"_1-集群架构节点角色功能\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-集群架构节点角色功能\"><span>1. 集群架构节点角色功能</span></a></h2>\n<h3 id=\"_1-1-master-node-主控节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-master-node-主控节点\"><span>1.1 Master Node（主控节点）</span></a></h3>\n<p>k8s集群控制节点，对集群进行调度管理，接受集群外的用户去集群操作请求。</p>\n<p>Master Node 由 API Server、Scheduler、ClusterState Store（ETCD 数据库）和 Controller ManagerServer 所组成。</p>\n<h4 id=\"_1-1-1-api-server\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-1-api-server\"><span>1.1.1 API Server</span></a></h4>\n<p>集群统一入口，以Restful方式交给etcd存储。</p>\n<h4 id=\"_1-1-2-scheduler\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-2-scheduler\"><span>1.1.2 Scheduler</span></a></h4>\n<p>做节点调度，选择Node节点进行一个部署。</p>\n<h4 id=\"_1-1-3-controller-managerserver\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-3-controller-managerserver\"><span>1.1.3 Controller ManagerServer</span></a></h4>\n<p>做资源的控制，处理集群中常规的后台任务，一个资源对应一个控制器。</p>\n<h4 id=\"_1-1-4-etcd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-4-etcd\"><span>1.1.4 ETCD</span></a></h4>\n<p>主要做数据存储，用于保存集群相关的数据。</p>\n<h3 id=\"_1-2-work-node-工作节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-work-node-工作节点\"><span>1.2 Work Node（工作节点）</span></a></h3>\n<p>集群工作节点，运行用户业务应用容器；</p>\n<p>Worker Node 包含 kubelet、kube-proxy 和 ContainerRuntime;</p>\n<h4 id=\"_1-2-1-kubelet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-1-kubelet\"><span>1.2.1 kubelet</span></a></h4>\n<p>管理本机容器，生命周期。。。。。</p>\n<h4 id=\"_1-2-2-kube-proxy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-2-kube-proxy\"><span>1.2.2 kube-proxy</span></a></h4>\n<p>提供网络代理、负载均衡。</p>\n<h2 id=\"_2-核心概念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-核心概念\"><span>2. 核心概念</span></a></h2>\n<h3 id=\"_2-1-pod\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-pod\"><span>2.1 pod</span></a></h3>\n<ul>\n<li>k8s中最小的部署单元</li>\n<li>一组容器的集合</li>\n<li>共享网络的</li>\n<li>生命周期时短暂的</li>\n</ul>\n<h3 id=\"_2-2-controller\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-2-controller\"><span>2.2 Controller</span></a></h3>\n<p>创建pod</p>\n<ul>\n<li>确保预期的pod副本数量</li>\n<li>无状态应用部署</li>\n<li>有状态的应用部署</li>\n<li>确保所有的node运行同一个pod</li>\n<li>一次性任务和定时任务</li>\n</ul>\n<h3 id=\"_2-3-service\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-3-service\"><span>2.3 Service</span></a></h3>\n<ul>\n<li>定义一组pod的访问规则</li>\n<li>Master</li>\n</ul>\n","env":{"base":"/","filePath":"C:/Users/kylinBachelor/Desktop/my-project/docs/notes/K8S/2. 集群架构组件/index.md","filePathRelative":"notes/K8S/2. 集群架构组件/index.md","frontmatter":{},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"k8s集群架构组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#k8s集群架构组件\"><span>k8s集群架构组件</span></a></h1>\n<p><img src=\"@source/notes/K8S/2. 集群架构组件/assets/image-20240711160204601.png\" alt=\"image-20240711160204601\"></p>\n<h2 id=\"_1-集群架构节点角色功能\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-集群架构节点角色功能\"><span>1. 集群架构节点角色功能</span></a></h2>\n<h3 id=\"_1-1-master-node-主控节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-master-node-主控节点\"><span>1.1 Master Node（主控节点）</span></a></h3>\n<p>k8s集群控制节点，对集群进行调度管理，接受集群外的用户去集群操作请求。</p>\n<p>Master Node 由 API Server、Scheduler、ClusterState Store（ETCD 数据库）和 Controller ManagerServer 所组成。</p>\n<h4 id=\"_1-1-1-api-server\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-1-api-server\"><span>1.1.1 API Server</span></a></h4>\n<p>集群统一入口，以Restful方式交给etcd存储。</p>\n<h4 id=\"_1-1-2-scheduler\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-2-scheduler\"><span>1.1.2 Scheduler</span></a></h4>\n<p>做节点调度，选择Node节点进行一个部署。</p>\n<h4 id=\"_1-1-3-controller-managerserver\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-3-controller-managerserver\"><span>1.1.3 Controller ManagerServer</span></a></h4>\n<p>做资源的控制，处理集群中常规的后台任务，一个资源对应一个控制器。</p>\n<h4 id=\"_1-1-4-etcd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-4-etcd\"><span>1.1.4 ETCD</span></a></h4>\n<p>主要做数据存储，用于保存集群相关的数据。</p>\n<h3 id=\"_1-2-work-node-工作节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-work-node-工作节点\"><span>1.2 Work Node（工作节点）</span></a></h3>\n<p>集群工作节点，运行用户业务应用容器；</p>\n<p>Worker Node 包含 kubelet、kube-proxy 和 ContainerRuntime;</p>\n<h4 id=\"_1-2-1-kubelet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-1-kubelet\"><span>1.2.1 kubelet</span></a></h4>\n<p>管理本机容器，生命周期。。。。。</p>\n<h4 id=\"_1-2-2-kube-proxy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-2-kube-proxy\"><span>1.2.2 kube-proxy</span></a></h4>\n<p>提供网络代理、负载均衡。</p>\n<h2 id=\"_2-核心概念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-核心概念\"><span>2. 核心概念</span></a></h2>\n<h3 id=\"_2-1-pod\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-pod\"><span>2.1 pod</span></a></h3>\n<ul>\n<li>k8s中最小的部署单元</li>\n<li>一组容器的集合</li>\n<li>共享网络的</li>\n<li>生命周期时短暂的</li>\n</ul>\n<h3 id=\"_2-2-controller\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-2-controller\"><span>2.2 Controller</span></a></h3>\n<p>创建pod</p>\n<ul>\n<li>确保预期的pod副本数量</li>\n<li>无状态应用部署</li>\n<li>有状态的应用部署</li>\n<li>确保所有的node运行同一个pod</li>\n<li>一次性任务和定时任务</li>\n</ul>\n<h3 id=\"_2-3-service\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-3-service\"><span>2.3 Service</span></a></h3>\n<ul>\n<li>定义一组pod的访问规则</li>\n<li>Master</li>\n</ul>\n</template>","contentStripped":"<h1 id=\"k8s集群架构组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#k8s集群架构组件\"><span>k8s集群架构组件</span></a></h1>\n<p><img src=\"@source/notes/K8S/2. 集群架构组件/assets/image-20240711160204601.png\" alt=\"image-20240711160204601\"></p>\n<h2 id=\"_1-集群架构节点角色功能\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-集群架构节点角色功能\"><span>1. 集群架构节点角色功能</span></a></h2>\n<h3 id=\"_1-1-master-node-主控节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-master-node-主控节点\"><span>1.1 Master Node（主控节点）</span></a></h3>\n<p>k8s集群控制节点，对集群进行调度管理，接受集群外的用户去集群操作请求。</p>\n<p>Master Node 由 API Server、Scheduler、ClusterState Store（ETCD 数据库）和 Controller ManagerServer 所组成。</p>\n<h4 id=\"_1-1-1-api-server\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-1-api-server\"><span>1.1.1 API Server</span></a></h4>\n<p>集群统一入口，以Restful方式交给etcd存储。</p>\n<h4 id=\"_1-1-2-scheduler\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-2-scheduler\"><span>1.1.2 Scheduler</span></a></h4>\n<p>做节点调度，选择Node节点进行一个部署。</p>\n<h4 id=\"_1-1-3-controller-managerserver\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-3-controller-managerserver\"><span>1.1.3 Controller ManagerServer</span></a></h4>\n<p>做资源的控制，处理集群中常规的后台任务，一个资源对应一个控制器。</p>\n<h4 id=\"_1-1-4-etcd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-1-4-etcd\"><span>1.1.4 ETCD</span></a></h4>\n<p>主要做数据存储，用于保存集群相关的数据。</p>\n<h3 id=\"_1-2-work-node-工作节点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-work-node-工作节点\"><span>1.2 Work Node（工作节点）</span></a></h3>\n<p>集群工作节点，运行用户业务应用容器；</p>\n<p>Worker Node 包含 kubelet、kube-proxy 和 ContainerRuntime;</p>\n<h4 id=\"_1-2-1-kubelet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-1-kubelet\"><span>1.2.1 kubelet</span></a></h4>\n<p>管理本机容器，生命周期。。。。。</p>\n<h4 id=\"_1-2-2-kube-proxy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-2-2-kube-proxy\"><span>1.2.2 kube-proxy</span></a></h4>\n<p>提供网络代理、负载均衡。</p>\n<h2 id=\"_2-核心概念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-核心概念\"><span>2. 核心概念</span></a></h2>\n<h3 id=\"_2-1-pod\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-pod\"><span>2.1 pod</span></a></h3>\n<ul>\n<li>k8s中最小的部署单元</li>\n<li>一组容器的集合</li>\n<li>共享网络的</li>\n<li>生命周期时短暂的</li>\n</ul>\n<h3 id=\"_2-2-controller\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-2-controller\"><span>2.2 Controller</span></a></h3>\n<p>创建pod</p>\n<ul>\n<li>确保预期的pod副本数量</li>\n<li>无状态应用部署</li>\n<li>有状态的应用部署</li>\n<li>确保所有的node运行同一个pod</li>\n<li>一次性任务和定时任务</li>\n</ul>\n<h3 id=\"_2-3-service\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-3-service\"><span>2.3 Service</span></a></h3>\n<ul>\n<li>定义一组pod的访问规则</li>\n<li>Master</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# k8s集群架构组件\r\n\r\n![image-20240711160204601](./assets/image-20240711160204601.png)\r\n\r\n## 1. 集群架构节点角色功能\r\n\r\n### 1.1 Master Node（主控节点）\r\n\r\nk8s集群控制节点，对集群进行调度管理，接受集群外的用户去集群操作请求。\r\n\r\nMaster Node 由 API Server、Scheduler、ClusterState Store（ETCD 数据库）和 Controller ManagerServer 所组成。\r\n\r\n#### 1.1.1 API Server\r\n\r\n集群统一入口，以Restful方式交给etcd存储。\r\n\r\n#### 1.1.2 Scheduler\r\n\r\n做节点调度，选择Node节点进行一个部署。\r\n\r\n#### 1.1.3 Controller ManagerServer\r\n\r\n做资源的控制，处理集群中常规的后台任务，一个资源对应一个控制器。\r\n\r\n####  1.1.4 ETCD\r\n\r\n主要做数据存储，用于保存集群相关的数据。\r\n\r\n### 1.2 Work Node（工作节点）\r\n\r\n集群工作节点，运行用户业务应用容器；\r\n\r\nWorker Node 包含 kubelet、kube-proxy 和 ContainerRuntime;\r\n\r\n#### 1.2.1 kubelet\r\n\r\n管理本机容器，生命周期。。。。。\r\n\r\n#### 1.2.2 kube-proxy\r\n\r\n提供网络代理、负载均衡。\r\n\r\n\r\n\r\n## 2. 核心概念\r\n\r\n### 2.1 pod\r\n\r\n+ k8s中最小的部署单元\r\n+ 一组容器的集合\r\n+ 共享网络的\r\n+ 生命周期时短暂的\r\n\r\n### 2.2 Controller\r\n\r\n创建pod\r\n\r\n+ 确保预期的pod副本数量\r\n+ 无状态应用部署\r\n+ 有状态的应用部署\r\n+ 确保所有的node运行同一个pod\r\n+ 一次性任务和定时任务\r\n\r\n### 2.3 Service\r\n\r\n+ 定义一组pod的访问规则\r\n+ Master","excerpt":"","includedFiles":[],"tasklists":0,"title":"k8s集群架构组件","headers":[{"level":2,"title":"1. 集群架构节点角色功能","slug":"_1-集群架构节点角色功能","link":"#_1-集群架构节点角色功能","children":[{"level":3,"title":"1.1 Master Node（主控节点）","slug":"_1-1-master-node-主控节点","link":"#_1-1-master-node-主控节点","children":[]},{"level":3,"title":"1.2 Work Node（工作节点）","slug":"_1-2-work-node-工作节点","link":"#_1-2-work-node-工作节点","children":[]}]},{"level":2,"title":"2. 核心概念","slug":"_2-核心概念","link":"#_2-核心概念","children":[{"level":3,"title":"2.1 pod","slug":"_2-1-pod","link":"#_2-1-pod","children":[]},{"level":3,"title":"2.2 Controller","slug":"_2-2-controller","link":"#_2-2-controller","children":[]},{"level":3,"title":"2.3 Service","slug":"_2-3-service","link":"#_2-3-service","children":[]}]}]}}
