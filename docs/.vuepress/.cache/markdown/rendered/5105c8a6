{"content":"<h2 id=\"_1-什么是sci\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-什么是sci\"><span>1. 什么是SCI</span></a></h2>\n<p>ServletContainerInitializer 是 Jakarta EE (Servlet API) 规范预留的监听入口，当容器启动时会进行SCI的扫描，比监听器、过滤器这些更顶层。</p>\n<h2 id=\"_2-官方\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-官方\"><span>2. 官方</span></a></h2>\n<p><a href=\"https://jakarta.ee/specifications/platform/10/apidocs/jakarta/servlet/servletcontainerinitializer\" target=\"_blank\" rel=\"noopener noreferrer\">Jakarta ServletContainerInitializer 官网</a></p>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140404857.png\" alt=\"image-20250208140404857\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140404857</figcaption></figure>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140450058.png\" alt=\"image-20250208140450058\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140450058</figcaption></figure>\n<h2 id=\"_3-sci机制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-sci机制\"><span>3. SCI机制</span></a></h2>\n<h3 id=\"_3-1-servletcontainerinitializer-java\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-servletcontainerinitializer-java\"><span>3.1 <em>ServletContainerInitializer.java</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">util</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t// Servlet 容器 [如:Tomcat] 启动项目时传递 此项目的 ServletContext</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> ></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContext</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> servletContext</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">) </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">throws</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletException</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<ol>\n<li>\n<p>ServletContainerInitializer 带有特殊引擎机制可被扫描注册和编程式注册</p>\n</li>\n<li>\n<p>扫描注册由 Tomcat 这样的 Servlet 容器内置支持</p>\n</li>\n<li>\n<p>编程式注册 需要 Tomcat 内部API支持、而非 servlet.api</p>\n</li>\n<li>\n<p>未配置 @HandlesTypes 注解时、Set&lt;Class&lt;? &gt; classes 总是为空</p>\n</li>\n<li>\n<p>扫描注册须声明: META-INF/services/jakarta.servlet.ServletContainerInitializer</p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"_3-2-handlestypes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-handlestypes\"><span>3.2 <em>@HandlesTypes</em></span></a></h3>\n","env":{"base":"/","filePath":"F:/my_source_code/kylinBachelor.github.io/docs/article/technology/sci机制/ServletContainerInitializer.md","filePathRelative":"article/technology/sci机制/ServletContainerInitializer.md","frontmatter":{"title":"ServletContainerInitializer机制","tags":["Servlet"],"createTime":"2025/02/08 14:15:41"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"_1-什么是sci\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-什么是sci\"><span>1. 什么是SCI</span></a></h2>\n<p>ServletContainerInitializer 是 Jakarta EE (Servlet API) 规范预留的监听入口，当容器启动时会进行SCI的扫描，比监听器、过滤器这些更顶层。</p>\n<h2 id=\"_2-官方\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-官方\"><span>2. 官方</span></a></h2>\n<p><a href=\"https://jakarta.ee/specifications/platform/10/apidocs/jakarta/servlet/servletcontainerinitializer\" target=\"_blank\" rel=\"noopener noreferrer\">Jakarta ServletContainerInitializer 官网</a></p>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140404857.png\" alt=\"image-20250208140404857\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140404857</figcaption></figure>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140450058.png\" alt=\"image-20250208140450058\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140450058</figcaption></figure>\n<h2 id=\"_3-sci机制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-sci机制\"><span>3. SCI机制</span></a></h2>\n<h3 id=\"_3-1-servletcontainerinitializer-java\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-servletcontainerinitializer-java\"><span>3.1 <em>ServletContainerInitializer.java</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">util</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t// Servlet 容器 [如:Tomcat] 启动项目时传递 此项目的 ServletContext</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> ></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContext</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> servletContext</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">) </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">throws</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletException</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<ol>\n<li>\n<p>ServletContainerInitializer 带有特殊引擎机制可被扫描注册和编程式注册</p>\n</li>\n<li>\n<p>扫描注册由 Tomcat 这样的 Servlet 容器内置支持</p>\n</li>\n<li>\n<p>编程式注册 需要 Tomcat 内部API支持、而非 servlet.api</p>\n</li>\n<li>\n<p>未配置 @HandlesTypes 注解时、Set&lt;Class&lt;? &gt; classes 总是为空</p>\n</li>\n<li>\n<p>扫描注册须声明: META-INF/services/jakarta.servlet.ServletContainerInitializer</p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"_3-2-handlestypes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-handlestypes\"><span>3.2 <em>@HandlesTypes</em></span></a></h3>\n</template>","contentStripped":"<h2 id=\"_1-什么是sci\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-什么是sci\"><span>1. 什么是SCI</span></a></h2>\n<p>ServletContainerInitializer 是 Jakarta EE (Servlet API) 规范预留的监听入口，当容器启动时会进行SCI的扫描，比监听器、过滤器这些更顶层。</p>\n<h2 id=\"_2-官方\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-官方\"><span>2. 官方</span></a></h2>\n<p><a href=\"https://jakarta.ee/specifications/platform/10/apidocs/jakarta/servlet/servletcontainerinitializer\" target=\"_blank\" rel=\"noopener noreferrer\">Jakarta ServletContainerInitializer 官网</a></p>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140404857.png\" alt=\"image-20250208140404857\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140404857</figcaption></figure>\n<figure><img src=\"@source/article/technology/sci机制/assets/image-20250208140450058.png\" alt=\"image-20250208140450058\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250208140450058</figcaption></figure>\n<h2 id=\"_3-sci机制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-sci机制\"><span>3. SCI机制</span></a></h2>\n<h3 id=\"_3-1-servletcontainerinitializer-java\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-servletcontainerinitializer-java\"><span>3.1 <em>ServletContainerInitializer.java</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">util</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> ServletContainerInitializer</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">\t// Servlet 容器 [如:Tomcat] 启动项目时传递 此项目的 ServletContext</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">\tvoid</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> onStartup</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> ></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> classes</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletContext</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> servletContext</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">) </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">throws</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ServletException</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<ol>\n<li>\n<p>ServletContainerInitializer 带有特殊引擎机制可被扫描注册和编程式注册</p>\n</li>\n<li>\n<p>扫描注册由 Tomcat 这样的 Servlet 容器内置支持</p>\n</li>\n<li>\n<p>编程式注册 需要 Tomcat 内部API支持、而非 servlet.api</p>\n</li>\n<li>\n<p>未配置 @HandlesTypes 注解时、Set&lt;Class&lt;? &gt; classes 总是为空</p>\n</li>\n<li>\n<p>扫描注册须声明: META-INF/services/jakarta.servlet.ServletContainerInitializer</p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"_3-2-handlestypes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-handlestypes\"><span>3.2 <em>@HandlesTypes</em></span></a></h3>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"## 1. 什么是SCI\r\n\r\nServletContainerInitializer 是 Jakarta EE (Servlet API) 规范预留的监听入口，当容器启动时会进行SCI的扫描，比监听器、过滤器这些更顶层。\r\n\r\n\r\n\r\n## 2. 官方\r\n\r\n[Jakarta ServletContainerInitializer 官网](https://jakarta.ee/specifications/platform/10/apidocs/jakarta/servlet/servletcontainerinitializer)\r\n\r\n![image-20250208140404857](assets/image-20250208140404857.png)\r\n\r\n\r\n\r\n![image-20250208140450058](assets/image-20250208140450058.png)\r\n\r\n\r\n\r\n## 3. SCI机制\r\n\r\n\r\n\r\n### 3.1 *ServletContainerInitializer.java*\r\n\r\n```java\r\npackage jakarta.servlet;\r\nimport java.util.Set;\r\npublic interface ServletContainerInitializer {\r\n\t// Servlet 容器 [如:Tomcat] 启动项目时传递 此项目的 ServletContext\r\n\tvoid onStartup(Set<Class<? > classes, ServletContext servletContext) throws ServletException;\r\n}\r\n```\r\n\r\n\r\n\r\n> 1. ServletContainerInitializer 带有特殊引擎机制可被扫描注册和编程式注册\r\n>\r\n> 2. 扫描注册由 Tomcat 这样的 Servlet 容器内置支持\r\n>\r\n> 3. 编程式注册 需要 Tomcat 内部API支持、而非 servlet.api\r\n>\r\n> 4. 未配置 @HandlesTypes 注解时、Set<Class<? > classes 总是为空\r\n>\r\n> 5. 扫描注册须声明: META-INF/services/jakarta.servlet.ServletContainerInitializer\r\n\r\n\r\n\r\n### 3.2 *@HandlesTypes*","excerpt":"","includedFiles":[],"tasklists":0,"title":"","headers":[{"level":2,"title":"1. 什么是SCI","slug":"_1-什么是sci","link":"#_1-什么是sci","children":[]},{"level":2,"title":"2. 官方","slug":"_2-官方","link":"#_2-官方","children":[]},{"level":2,"title":"3. SCI机制","slug":"_3-sci机制","link":"#_3-sci机制","children":[{"level":3,"title":"3.1 ServletContainerInitializer.java","slug":"_3-1-servletcontainerinitializer-java","link":"#_3-1-servletcontainerinitializer-java","children":[]},{"level":3,"title":"3.2 @HandlesTypes","slug":"_3-2-handlestypes","link":"#_3-2-handlestypes","children":[]}]}]}}
