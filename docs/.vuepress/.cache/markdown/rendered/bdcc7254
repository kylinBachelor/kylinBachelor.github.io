{"content":"<h1 id=\"npm操作记录\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#npm操作记录\"><span>Npm操作记录</span></a></h1>\n<h2 id=\"_1-npm-update-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-npm-update-命令\"><span>1. <code v-pre>npm update</code> 命令</span></a></h2>\n<p><code v-pre>npm update</code> 命令用于更新项目中已安装的包到最新版本。</p>\n<ol>\n<li>\n<p>基本用法</p>\n<p>执行<code v-pre>npm update</code>命令后，npm会检查<code v-pre>node_modules</code>目录下所有包的版本，并尝试更新到符合<code v-pre>package.json</code>中指定的版本范围的最新版本。‌</p>\n</li>\n<li>\n<p>特定包更新</p>\n<p>如果你想更新一个或几个特定的包，可以使用以下命令：<code v-pre>npm update package1 package2...</code>。这将只更新在命令行中指定的包。</p>\n</li>\n<li>\n<p>全局更新</p>\n<p>如果你想要更新全局安装的npm包，可以使用<code v-pre>-g</code>标志：<code v-pre>npm update -g</code>。</p>\n</li>\n<li>\n<p>锁定版本</p>\n<p>在执行<code v-pre>npm update</code>时，<code v-pre>package-lock.json</code>文件会被更新，以反映更新后的依赖版本。这个文件确保了在不同环境中安装相同版本的依赖，提高了项目的可重复性。</p>\n</li>\n<li>\n<p>忽略脚本</p>\n<p>在更新过程中，可以使用<code v-pre>--ignore-scripts</code>标志来防止执行<code v-pre>package.json</code>中的<code v-pre>preinstall</code>、<code v-pre>install</code>、<code v-pre>postinstall</code>、<code v-pre>prepublish</code>和<code v-pre>prepare</code>脚本。</p>\n</li>\n</ol>\n","env":{"base":"/","filePath":"C:/Users/kylinBachelor/Desktop/my-project/docs/notes/Web/npm/index.md","filePathRelative":"notes/Web/npm/index.md","frontmatter":{},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"npm操作记录\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#npm操作记录\"><span>Npm操作记录</span></a></h1>\n<h2 id=\"_1-npm-update-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-npm-update-命令\"><span>1. <code v-pre>npm update</code> 命令</span></a></h2>\n<p><code v-pre>npm update</code> 命令用于更新项目中已安装的包到最新版本。</p>\n<ol>\n<li>\n<p>基本用法</p>\n<p>执行<code v-pre>npm update</code>命令后，npm会检查<code v-pre>node_modules</code>目录下所有包的版本，并尝试更新到符合<code v-pre>package.json</code>中指定的版本范围的最新版本。‌</p>\n</li>\n<li>\n<p>特定包更新</p>\n<p>如果你想更新一个或几个特定的包，可以使用以下命令：<code v-pre>npm update package1 package2...</code>。这将只更新在命令行中指定的包。</p>\n</li>\n<li>\n<p>全局更新</p>\n<p>如果你想要更新全局安装的npm包，可以使用<code v-pre>-g</code>标志：<code v-pre>npm update -g</code>。</p>\n</li>\n<li>\n<p>锁定版本</p>\n<p>在执行<code v-pre>npm update</code>时，<code v-pre>package-lock.json</code>文件会被更新，以反映更新后的依赖版本。这个文件确保了在不同环境中安装相同版本的依赖，提高了项目的可重复性。</p>\n</li>\n<li>\n<p>忽略脚本</p>\n<p>在更新过程中，可以使用<code v-pre>--ignore-scripts</code>标志来防止执行<code v-pre>package.json</code>中的<code v-pre>preinstall</code>、<code v-pre>install</code>、<code v-pre>postinstall</code>、<code v-pre>prepublish</code>和<code v-pre>prepare</code>脚本。</p>\n</li>\n</ol>\n</template>","contentStripped":"<h1 id=\"npm操作记录\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#npm操作记录\"><span>Npm操作记录</span></a></h1>\n<h2 id=\"_1-npm-update-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-npm-update-命令\"><span>1. <code v-pre>npm update</code> 命令</span></a></h2>\n<p><code v-pre>npm update</code> 命令用于更新项目中已安装的包到最新版本。</p>\n<ol>\n<li>\n<p>基本用法</p>\n<p>执行<code v-pre>npm update</code>命令后，npm会检查<code v-pre>node_modules</code>目录下所有包的版本，并尝试更新到符合<code v-pre>package.json</code>中指定的版本范围的最新版本。‌</p>\n</li>\n<li>\n<p>特定包更新</p>\n<p>如果你想更新一个或几个特定的包，可以使用以下命令：<code v-pre>npm update package1 package2...</code>。这将只更新在命令行中指定的包。</p>\n</li>\n<li>\n<p>全局更新</p>\n<p>如果你想要更新全局安装的npm包，可以使用<code v-pre>-g</code>标志：<code v-pre>npm update -g</code>。</p>\n</li>\n<li>\n<p>锁定版本</p>\n<p>在执行<code v-pre>npm update</code>时，<code v-pre>package-lock.json</code>文件会被更新，以反映更新后的依赖版本。这个文件确保了在不同环境中安装相同版本的依赖，提高了项目的可重复性。</p>\n</li>\n<li>\n<p>忽略脚本</p>\n<p>在更新过程中，可以使用<code v-pre>--ignore-scripts</code>标志来防止执行<code v-pre>package.json</code>中的<code v-pre>preinstall</code>、<code v-pre>install</code>、<code v-pre>postinstall</code>、<code v-pre>prepublish</code>和<code v-pre>prepare</code>脚本。</p>\n</li>\n</ol>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# Npm操作记录\r\n\r\n## 1. `npm update` 命令\r\n\r\n`npm update` 命令用于更新项目中已安装的包到最新版本。\r\n\r\n1. 基本用法\r\n\r\n    执行`npm update`命令后，npm会检查`node_modules`目录下所有包的版本，并尝试更新到符合`package.json`中指定的版本范围的最新版本。‌\r\n\r\n2. 特定包更新\r\n\r\n    如果你想更新一个或几个特定的包，可以使用以下命令：`npm update package1 package2...`。这将只更新在命令行中指定的包。\r\n\r\n3. 全局更新\r\n\r\n    如果你想要更新全局安装的npm包，可以使用`-g`标志：`npm update -g`。\r\n\r\n4. 锁定版本\r\n\r\n    在执行`npm update`时，`package-lock.json`文件会被更新，以反映更新后的依赖版本。这个文件确保了在不同环境中安装相同版本的依赖，提高了项目的可重复性。\r\n\r\n5. 忽略脚本\r\n\r\n    在更新过程中，可以使用`--ignore-scripts`标志来防止执行`package.json`中的`preinstall`、`install`、`postinstall`、`prepublish`和`prepare`脚本。","excerpt":"","includedFiles":[],"tasklists":0,"title":"Npm操作记录","headers":[{"level":2,"title":"1. npm update 命令","slug":"_1-npm-update-命令","link":"#_1-npm-update-命令","children":[]}]}}
