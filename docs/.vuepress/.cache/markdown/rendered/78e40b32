{"content":"<h1 id=\"docker-compose\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#docker-compose\"><span>Docker-compose</span></a></h1>\n<blockquote>\n<p>Compose 是 Docker 公司推出的一个软件，可以管理多个Docker容器组成一个应用。需要定义一个YAML格式的配置文件</p>\n<p>docker-compose.yaml,写好多个容器之间的调用关系。然后只要一个命令就能同时 <strong>启动/关闭</strong> 这些容器。</p>\n<p>Docker-compose 允许用户通过一个单独的docker-compose.yml文件来定义一组相关联的应用容器为一个项目。</p>\n<p>即 <strong>容器的编排管理</strong>。</p>\n</blockquote>\n<div class=\"language-docker-compose line-numbers-mode\" data-ext=\"docker-compose\" data-title=\"docker-compose\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version: '2.3'</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>  pigx999:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9999</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9999:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9999:9999</span></span>\n<span class=\"line\"><span>  pigx998:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9998</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9998:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9998:9999</span></span>\n<span class=\"line\"><span>  pigx997:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9997</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9997:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9997:9999</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>##　1. Ｄocker-compose 安装</p>\n<p>文件： <a href=\"./assets/docker-compose-Linux-x86_64\">docker-compose-Linux-x86_64</a></p>\n<div class=\"language-sh line-numbers-mode\" data-ext=\"sh\" data-title=\"sh\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">mv</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> docker-compose-Linux-x86_64</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> +x</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"># 开发环境可以授予最高权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 777</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-卸载\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-卸载\"><span>2. 卸载</span></a></h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"bash\" data-title=\"bash\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">rm</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> -rf</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reboot</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_3-yml配置文件及常用指令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-yml配置文件及常用指令\"><span>3. yml配置文件及常用指令</span></a></h2>\n<p>Docker compose 默认使用 docker-compose.yml 。当然也可以使用 -f 参数指定具体文件。</p>\n<h3 id=\"_3-1-yml文件级\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-yml文件级\"><span>3.1 yml文件级</span></a></h3>\n<p>Docker Compose 的 YAML 文件包含 4 个一级 key:version、services、networks、volumes</p>\n<ul>\n<li>version 是必须指定的，而且总是位于文件的第一行。它定义了 Compose 文件格式(主要是 API)的版本。注意，version 并非定义 Docker Compose 或 Docker 引擎的版本号。</li>\n<li>services 用于定义不同的应用服务。Docker Compose 会将每个服务部署在各自的容器中。</li>\n<li>networks 用于指引 Docker 创建新的网络。默认情况下，Docker Compose 会创建 bridge 网络。 这是一种单主机网络，只能够实现同一主机上容器的连接。当然，也可以使用 driver 属性来指定不 同的网络类型。</li>\n<li>volumes 用于指引 Docker 来创建新的卷。</li>\n</ul>\n<h2 id=\"_2-compose常用命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-compose常用命令\"><span>2. compose常用命令</span></a></h2>\n<ul>\n<li>docker-compose -h : 查看帮助</li>\n<li><strong>docker-compose up : 启动所有docker-compose服务</strong></li>\n<li><strong>docker-compose up -d : 启动所有docker-compose服务并后台运行</strong></li>\n<li>docker-compose down : 停止并删除容器、网络、卷、镜像。</li>\n<li>docker-compose exec yml里面的服务id bash : 进入容器实例内部，</li>\n<li>docker-compose ps : 查看当前compose编排过的所有容器</li>\n<li>docker-compose top : 展示当前docker-compose编排过的容器进程</li>\n<li>docker-compose logs yml里面的服务id : 查看容器输出日志</li>\n<li>docker-compose config : 检查yml配置</li>\n<li>docker-compose config -q : 检查配置，有问题才输出</li>\n<li><strong>docker-compose restart : 重启服务</strong></li>\n<li><strong>docker-compose start : 启动服务</strong></li>\n<li><strong>docker-compose stop : 停止服务</strong></li>\n</ul>\n<h2 id=\"_3-伪示例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-伪示例\"><span>3. 伪示例</span></a></h2>\n<div class=\"language-dockerfile line-numbers-mode\" data-ext=\"dockerfile\" data-title=\"dockerfile\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version 3</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>\t# build1</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称, 构建镜像时的镜像名就是该服务名</span></span>\n<span class=\"line\"><span>\t\tbuild: . # 相对当前docker-compose.yml 文件所在目录，基于Dockerfile构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\t# build2</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称</span></span>\n<span class=\"line\"><span>\t\tbuild:</span></span>\n<span class=\"line\"><span>\t\t\tcontext: . # 相对当前 docker-compose.yml 文件所在目录</span></span>\n<span class=\"line\"><span>\t\t\tdockerfile: Dockerfile-alternate # 基于名称为 Dockerfile-alternate 的文件构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\tmicroservice:</span></span>\n<span class=\"line\"><span>\t\timage: order_docker:1.0</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: ms01</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"1000:100\"</span></span>\n<span class=\"line\"><span>\t\t\t- \"6000:6000\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /data1:/dta</span></span>\n<span class=\"line\"><span>\t\t\t- /data2:/data2</span></span>\n<span class=\"line\"><span>\t\tdepends_on:</span></span>\n<span class=\"line\"><span>\t\t\t- redis</span></span>\n<span class=\"line\"><span>\t\t\t- mysql</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tredis:</span></span>\n<span class=\"line\"><span>\t\timage: redis:6.8.0</span></span>\n<span class=\"line\"><span>\t\tports::</span></span>\n<span class=\"line\"><span>\t\t\t- \"6379:6379\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/redis.conf:/etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/data:/data</span></span>\n<span class=\"line\"><span>\t\tcommand: redis-server /etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tmysql:</span></span>\n<span class=\"line\"><span>\t\timage: mysql:5.7</span></span>\n<span class=\"line\"><span>\t\tenvironment:</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ROOT_PASSWORD: '12345'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ALLOW_EMPTY_PASSWORD: 'no'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_DATABASE: 'db1'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_USER: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_PASSWROD: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"3306:3306\"</span></span>\n<span class=\"line\"><span>\t\tvolumes:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/mysql/db:/var/lib/mysql</span></span>\n<span class=\"line\"><span>            - /app/mysql/conf/my.cnf:/etc/my.cnf</span></span>\n<span class=\"line\"><span>            - /app/mysql/init:/docker-entrypoint-initdb.d</span></span>\n<span class=\"line\"><span>        networks:</span></span>\n<span class=\"line\"><span>        \t- xx_net</span></span>\n<span class=\"line\"><span>        command: --default-authentication-plugin=mysql_native_password # 解决外部无法访问</span></span>\n<span class=\"line\"><span>\t\t\t</span></span>\n<span class=\"line\"><span>networks:</span></span>\n<span class=\"line\"><span>\t- xx_net:</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"C:/Users/kylinBachelor/Desktop/kylinBachelor.github.io/docs/notes/Docker/Docker-compose/index.md","filePathRelative":"notes/Docker/Docker-compose/index.md","frontmatter":{},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"docker-compose\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#docker-compose\"><span>Docker-compose</span></a></h1>\n<blockquote>\n<p>Compose 是 Docker 公司推出的一个软件，可以管理多个Docker容器组成一个应用。需要定义一个YAML格式的配置文件</p>\n<p>docker-compose.yaml,写好多个容器之间的调用关系。然后只要一个命令就能同时 <strong>启动/关闭</strong> 这些容器。</p>\n<p>Docker-compose 允许用户通过一个单独的docker-compose.yml文件来定义一组相关联的应用容器为一个项目。</p>\n<p>即 <strong>容器的编排管理</strong>。</p>\n</blockquote>\n<div class=\"language-docker-compose line-numbers-mode\" data-ext=\"docker-compose\" data-title=\"docker-compose\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version: '2.3'</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>  pigx999:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9999</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9999:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9999:9999</span></span>\n<span class=\"line\"><span>  pigx998:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9998</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9998:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9998:9999</span></span>\n<span class=\"line\"><span>  pigx997:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9997</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9997:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9997:9999</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>##　1. Ｄocker-compose 安装</p>\n<p>文件： <a href=\"./assets/docker-compose-Linux-x86_64\">docker-compose-Linux-x86_64</a></p>\n<div class=\"language-sh line-numbers-mode\" data-ext=\"sh\" data-title=\"sh\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">mv</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> docker-compose-Linux-x86_64</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> +x</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"># 开发环境可以授予最高权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 777</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-卸载\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-卸载\"><span>2. 卸载</span></a></h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"bash\" data-title=\"bash\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">rm</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> -rf</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reboot</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_3-yml配置文件及常用指令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-yml配置文件及常用指令\"><span>3. yml配置文件及常用指令</span></a></h2>\n<p>Docker compose 默认使用 docker-compose.yml 。当然也可以使用 -f 参数指定具体文件。</p>\n<h3 id=\"_3-1-yml文件级\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-yml文件级\"><span>3.1 yml文件级</span></a></h3>\n<p>Docker Compose 的 YAML 文件包含 4 个一级 key:version、services、networks、volumes</p>\n<ul>\n<li>version 是必须指定的，而且总是位于文件的第一行。它定义了 Compose 文件格式(主要是 API)的版本。注意，version 并非定义 Docker Compose 或 Docker 引擎的版本号。</li>\n<li>services 用于定义不同的应用服务。Docker Compose 会将每个服务部署在各自的容器中。</li>\n<li>networks 用于指引 Docker 创建新的网络。默认情况下，Docker Compose 会创建 bridge 网络。 这是一种单主机网络，只能够实现同一主机上容器的连接。当然，也可以使用 driver 属性来指定不 同的网络类型。</li>\n<li>volumes 用于指引 Docker 来创建新的卷。</li>\n</ul>\n<h2 id=\"_2-compose常用命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-compose常用命令\"><span>2. compose常用命令</span></a></h2>\n<ul>\n<li>docker-compose -h : 查看帮助</li>\n<li><strong>docker-compose up : 启动所有docker-compose服务</strong></li>\n<li><strong>docker-compose up -d : 启动所有docker-compose服务并后台运行</strong></li>\n<li>docker-compose down : 停止并删除容器、网络、卷、镜像。</li>\n<li>docker-compose exec yml里面的服务id bash : 进入容器实例内部，</li>\n<li>docker-compose ps : 查看当前compose编排过的所有容器</li>\n<li>docker-compose top : 展示当前docker-compose编排过的容器进程</li>\n<li>docker-compose logs yml里面的服务id : 查看容器输出日志</li>\n<li>docker-compose config : 检查yml配置</li>\n<li>docker-compose config -q : 检查配置，有问题才输出</li>\n<li><strong>docker-compose restart : 重启服务</strong></li>\n<li><strong>docker-compose start : 启动服务</strong></li>\n<li><strong>docker-compose stop : 停止服务</strong></li>\n</ul>\n<h2 id=\"_3-伪示例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-伪示例\"><span>3. 伪示例</span></a></h2>\n<div class=\"language-dockerfile line-numbers-mode\" data-ext=\"dockerfile\" data-title=\"dockerfile\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version 3</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>\t# build1</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称, 构建镜像时的镜像名就是该服务名</span></span>\n<span class=\"line\"><span>\t\tbuild: . # 相对当前docker-compose.yml 文件所在目录，基于Dockerfile构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\t# build2</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称</span></span>\n<span class=\"line\"><span>\t\tbuild:</span></span>\n<span class=\"line\"><span>\t\t\tcontext: . # 相对当前 docker-compose.yml 文件所在目录</span></span>\n<span class=\"line\"><span>\t\t\tdockerfile: Dockerfile-alternate # 基于名称为 Dockerfile-alternate 的文件构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\tmicroservice:</span></span>\n<span class=\"line\"><span>\t\timage: order_docker:1.0</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: ms01</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"1000:100\"</span></span>\n<span class=\"line\"><span>\t\t\t- \"6000:6000\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /data1:/dta</span></span>\n<span class=\"line\"><span>\t\t\t- /data2:/data2</span></span>\n<span class=\"line\"><span>\t\tdepends_on:</span></span>\n<span class=\"line\"><span>\t\t\t- redis</span></span>\n<span class=\"line\"><span>\t\t\t- mysql</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tredis:</span></span>\n<span class=\"line\"><span>\t\timage: redis:6.8.0</span></span>\n<span class=\"line\"><span>\t\tports::</span></span>\n<span class=\"line\"><span>\t\t\t- \"6379:6379\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/redis.conf:/etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/data:/data</span></span>\n<span class=\"line\"><span>\t\tcommand: redis-server /etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tmysql:</span></span>\n<span class=\"line\"><span>\t\timage: mysql:5.7</span></span>\n<span class=\"line\"><span>\t\tenvironment:</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ROOT_PASSWORD: '12345'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ALLOW_EMPTY_PASSWORD: 'no'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_DATABASE: 'db1'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_USER: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_PASSWROD: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"3306:3306\"</span></span>\n<span class=\"line\"><span>\t\tvolumes:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/mysql/db:/var/lib/mysql</span></span>\n<span class=\"line\"><span>            - /app/mysql/conf/my.cnf:/etc/my.cnf</span></span>\n<span class=\"line\"><span>            - /app/mysql/init:/docker-entrypoint-initdb.d</span></span>\n<span class=\"line\"><span>        networks:</span></span>\n<span class=\"line\"><span>        \t- xx_net</span></span>\n<span class=\"line\"><span>        command: --default-authentication-plugin=mysql_native_password # 解决外部无法访问</span></span>\n<span class=\"line\"><span>\t\t\t</span></span>\n<span class=\"line\"><span>networks:</span></span>\n<span class=\"line\"><span>\t- xx_net:</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h1 id=\"docker-compose\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#docker-compose\"><span>Docker-compose</span></a></h1>\n<blockquote>\n<p>Compose 是 Docker 公司推出的一个软件，可以管理多个Docker容器组成一个应用。需要定义一个YAML格式的配置文件</p>\n<p>docker-compose.yaml,写好多个容器之间的调用关系。然后只要一个命令就能同时 <strong>启动/关闭</strong> 这些容器。</p>\n<p>Docker-compose 允许用户通过一个单独的docker-compose.yml文件来定义一组相关联的应用容器为一个项目。</p>\n<p>即 <strong>容器的编排管理</strong>。</p>\n</blockquote>\n<div class=\"language-docker-compose line-numbers-mode\" data-ext=\"docker-compose\" data-title=\"docker-compose\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version: '2.3'</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>  pigx999:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9999</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9999:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9999:9999</span></span>\n<span class=\"line\"><span>  pigx998:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9998</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9998:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9998:9999</span></span>\n<span class=\"line\"><span>  pigx997:</span></span>\n<span class=\"line\"><span>    image: docker_pigx_boot</span></span>\n<span class=\"line\"><span>    container_name: docker_pigx_boot_9997</span></span>\n<span class=\"line\"><span>    volumes:</span></span>\n<span class=\"line\"><span>      - /home/deploy/docker/9997:/home/deploy</span></span>\n<span class=\"line\"><span>      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files</span></span>\n<span class=\"line\"><span>    ports:</span></span>\n<span class=\"line\"><span>      - 9997:9999</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>##　1. Ｄocker-compose 安装</p>\n<p>文件： <a href=\"./assets/docker-compose-Linux-x86_64\">docker-compose-Linux-x86_64</a></p>\n<div class=\"language-sh line-numbers-mode\" data-ext=\"sh\" data-title=\"sh\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">mv</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> docker-compose-Linux-x86_64</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> +x</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"># 开发环境可以授予最高权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">chmod</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 777</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_2-卸载\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-卸载\"><span>2. 卸载</span></a></h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"bash\" data-title=\"bash\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">rm</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> -rf</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\"> /usr/local/bin/docker-compose</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reboot</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_3-yml配置文件及常用指令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-yml配置文件及常用指令\"><span>3. yml配置文件及常用指令</span></a></h2>\n<p>Docker compose 默认使用 docker-compose.yml 。当然也可以使用 -f 参数指定具体文件。</p>\n<h3 id=\"_3-1-yml文件级\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-yml文件级\"><span>3.1 yml文件级</span></a></h3>\n<p>Docker Compose 的 YAML 文件包含 4 个一级 key:version、services、networks、volumes</p>\n<ul>\n<li>version 是必须指定的，而且总是位于文件的第一行。它定义了 Compose 文件格式(主要是 API)的版本。注意，version 并非定义 Docker Compose 或 Docker 引擎的版本号。</li>\n<li>services 用于定义不同的应用服务。Docker Compose 会将每个服务部署在各自的容器中。</li>\n<li>networks 用于指引 Docker 创建新的网络。默认情况下，Docker Compose 会创建 bridge 网络。 这是一种单主机网络，只能够实现同一主机上容器的连接。当然，也可以使用 driver 属性来指定不 同的网络类型。</li>\n<li>volumes 用于指引 Docker 来创建新的卷。</li>\n</ul>\n<h2 id=\"_2-compose常用命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-compose常用命令\"><span>2. compose常用命令</span></a></h2>\n<ul>\n<li>docker-compose -h : 查看帮助</li>\n<li><strong>docker-compose up : 启动所有docker-compose服务</strong></li>\n<li><strong>docker-compose up -d : 启动所有docker-compose服务并后台运行</strong></li>\n<li>docker-compose down : 停止并删除容器、网络、卷、镜像。</li>\n<li>docker-compose exec yml里面的服务id bash : 进入容器实例内部，</li>\n<li>docker-compose ps : 查看当前compose编排过的所有容器</li>\n<li>docker-compose top : 展示当前docker-compose编排过的容器进程</li>\n<li>docker-compose logs yml里面的服务id : 查看容器输出日志</li>\n<li>docker-compose config : 检查yml配置</li>\n<li>docker-compose config -q : 检查配置，有问题才输出</li>\n<li><strong>docker-compose restart : 重启服务</strong></li>\n<li><strong>docker-compose start : 启动服务</strong></li>\n<li><strong>docker-compose stop : 停止服务</strong></li>\n</ul>\n<h2 id=\"_3-伪示例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-伪示例\"><span>3. 伪示例</span></a></h2>\n<div class=\"language-dockerfile line-numbers-mode\" data-ext=\"dockerfile\" data-title=\"dockerfile\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>version 3</span></span>\n<span class=\"line\"><span>services:</span></span>\n<span class=\"line\"><span>\t# build1</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称, 构建镜像时的镜像名就是该服务名</span></span>\n<span class=\"line\"><span>\t\tbuild: . # 相对当前docker-compose.yml 文件所在目录，基于Dockerfile构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\t# build2</span></span>\n<span class=\"line\"><span>\tmycentos: # 服务名称</span></span>\n<span class=\"line\"><span>\t\tbuild:</span></span>\n<span class=\"line\"><span>\t\t\tcontext: . # 相对当前 docker-compose.yml 文件所在目录</span></span>\n<span class=\"line\"><span>\t\t\tdockerfile: Dockerfile-alternate # 基于名称为 Dockerfile-alternate 的文件构建镜像</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: mycentosContainer # 容器名称</span></span>\n<span class=\"line\"><span>\t\tports: # 宿主机与容器端口的映射关系</span></span>\n<span class=\"line\"><span>\t\t\t- \"8080:8080\"</span></span>\n<span class=\"line\"><span>\tmicroservice:</span></span>\n<span class=\"line\"><span>\t\timage: order_docker:1.0</span></span>\n<span class=\"line\"><span>\t\tcontainer_name: ms01</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"1000:100\"</span></span>\n<span class=\"line\"><span>\t\t\t- \"6000:6000\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /data1:/dta</span></span>\n<span class=\"line\"><span>\t\t\t- /data2:/data2</span></span>\n<span class=\"line\"><span>\t\tdepends_on:</span></span>\n<span class=\"line\"><span>\t\t\t- redis</span></span>\n<span class=\"line\"><span>\t\t\t- mysql</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tredis:</span></span>\n<span class=\"line\"><span>\t\timage: redis:6.8.0</span></span>\n<span class=\"line\"><span>\t\tports::</span></span>\n<span class=\"line\"><span>\t\t\t- \"6379:6379\"</span></span>\n<span class=\"line\"><span>\t\tvolumns:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/redis.conf:/etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\t\t- /app/redis/data:/data</span></span>\n<span class=\"line\"><span>\t\tcommand: redis-server /etc/redis/redis.conf</span></span>\n<span class=\"line\"><span>\t\tnetworks:</span></span>\n<span class=\"line\"><span>\t\t\t- xx_net</span></span>\n<span class=\"line\"><span>\tmysql:</span></span>\n<span class=\"line\"><span>\t\timage: mysql:5.7</span></span>\n<span class=\"line\"><span>\t\tenvironment:</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ROOT_PASSWORD: '12345'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_ALLOW_EMPTY_PASSWORD: 'no'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_DATABASE: 'db1'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_USER: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\t\tMYSQL_PASSWROD: 'ROOT'</span></span>\n<span class=\"line\"><span>\t\tports:</span></span>\n<span class=\"line\"><span>\t\t\t- \"3306:3306\"</span></span>\n<span class=\"line\"><span>\t\tvolumes:</span></span>\n<span class=\"line\"><span>\t\t\t- /app/mysql/db:/var/lib/mysql</span></span>\n<span class=\"line\"><span>            - /app/mysql/conf/my.cnf:/etc/my.cnf</span></span>\n<span class=\"line\"><span>            - /app/mysql/init:/docker-entrypoint-initdb.d</span></span>\n<span class=\"line\"><span>        networks:</span></span>\n<span class=\"line\"><span>        \t- xx_net</span></span>\n<span class=\"line\"><span>        command: --default-authentication-plugin=mysql_native_password # 解决外部无法访问</span></span>\n<span class=\"line\"><span>\t\t\t</span></span>\n<span class=\"line\"><span>networks:</span></span>\n<span class=\"line\"><span>\t- xx_net:</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# Docker-compose\r\n\r\n> Compose 是 Docker 公司推出的一个软件，可以管理多个Docker容器组成一个应用。需要定义一个YAML格式的配置文件 \r\n>\r\n> docker-compose.yaml,写好多个容器之间的调用关系。然后只要一个命令就能同时 **启动/关闭** 这些容器。\r\n>\r\n> Docker-compose 允许用户通过一个单独的docker-compose.yml文件来定义一组相关联的应用容器为一个项目。\r\n>\r\n> 即 **容器的编排管理**。\r\n\r\n```docker-compose\r\nversion: '2.3'\r\nservices:\r\n  pigx999:\r\n    image: docker_pigx_boot\r\n    container_name: docker_pigx_boot_9999\r\n    volumes:\r\n      - /home/deploy/docker/9999:/home/deploy\r\n      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files\r\n    ports:\r\n      - 9999:9999\r\n  pigx998:\r\n    image: docker_pigx_boot\r\n    container_name: docker_pigx_boot_9998\r\n    volumes:\r\n      - /home/deploy/docker/9998:/home/deploy\r\n      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files\r\n    ports:\r\n      - 9998:9999\r\n  pigx997:\r\n    image: docker_pigx_boot\r\n    container_name: docker_pigx_boot_9997\r\n    volumes:\r\n      - /home/deploy/docker/9997:/home/deploy\r\n      - /Users/lengleng/Downloads/files:/Users/lengleng/Downloads/files\r\n    ports:\r\n      - 9997:9999\r\n\r\n```\r\n\r\n##　1. Ｄocker-compose 安装\r\n\r\n文件： [docker-compose-Linux-x86_64](./assets/docker-compose-Linux-x86_64) \r\n\r\n```sh\r\nmv docker-compose-Linux-x86_64 /usr/local/bin/docker-compose\r\n\r\nchmod +x /usr/local/bin/docker-compose\r\n\r\n# 开发环境可以授予最高权限\r\nchmod 777 /usr/local/bin/docker-compose\r\n```\r\n\r\n## 2. 卸载\r\n```bash\r\nrm -rf /usr/local/bin/docker-compose\r\n\r\nreboot\r\n```\r\n\r\n## 3. yml配置文件及常用指令\r\n\r\nDocker compose 默认使用 docker-compose.yml 。当然也可以使用 -f 参数指定具体文件。\r\n\r\n### 3.1 yml文件级\r\n\r\nDocker Compose 的 YAML 文件包含 4 个一级 key:version、services、networks、volumes\r\n\r\n+ version 是必须指定的，而且总是位于文件的第一行。它定义了 Compose 文件格式(主要是 API)的版本。注意，version 并非定义 Docker Compose 或 Docker 引擎的版本号。\r\n+ services 用于定义不同的应用服务。Docker Compose 会将每个服务部署在各自的容器中。\r\n+ networks 用于指引 Docker 创建新的网络。默认情况下，Docker Compose 会创建 bridge 网络。 这是一种单主机网络，只能够实现同一主机上容器的连接。当然，也可以使用 driver 属性来指定不 同的网络类型。\r\n+ volumes 用于指引 Docker 来创建新的卷。\r\n\r\n## 2. compose常用命令\r\n\r\n+ docker-compose -h : 查看帮助\r\n+ **docker-compose up : 启动所有docker-compose服务**\r\n+ **docker-compose up -d : 启动所有docker-compose服务并后台运行**\r\n+ docker-compose down : 停止并删除容器、网络、卷、镜像。\r\n+ docker-compose exec yml里面的服务id bash : 进入容器实例内部，\r\n+ docker-compose ps : 查看当前compose编排过的所有容器\r\n+ docker-compose top : 展示当前docker-compose编排过的容器进程\r\n+ docker-compose logs yml里面的服务id : 查看容器输出日志\r\n+ docker-compose config : 检查yml配置\r\n+ docker-compose config -q : 检查配置，有问题才输出\r\n+ **docker-compose restart : 重启服务**\r\n+ **docker-compose start : 启动服务**\r\n+ **docker-compose stop : 停止服务**\r\n\r\n\r\n\r\n## 3. 伪示例\r\n\r\n```dockerfile\r\nversion 3\r\nservices:\r\n\t# build1\r\n\tmycentos: # 服务名称, 构建镜像时的镜像名就是该服务名\r\n\t\tbuild: . # 相对当前docker-compose.yml 文件所在目录，基于Dockerfile构建镜像\r\n\t\tcontainer_name: mycentosContainer # 容器名称\r\n\t\tports: # 宿主机与容器端口的映射关系\r\n\t\t\t- \"8080:8080\"\r\n\t# build2\r\n\tmycentos: # 服务名称\r\n\t\tbuild:\r\n\t\t\tcontext: . # 相对当前 docker-compose.yml 文件所在目录\r\n\t\t\tdockerfile: Dockerfile-alternate # 基于名称为 Dockerfile-alternate 的文件构建镜像\r\n\t\tcontainer_name: mycentosContainer # 容器名称\r\n\t\tports: # 宿主机与容器端口的映射关系\r\n\t\t\t- \"8080:8080\"\r\n\tmicroservice:\r\n\t\timage: order_docker:1.0\r\n\t\tcontainer_name: ms01\r\n\t\tports:\r\n\t\t\t- \"1000:100\"\r\n\t\t\t- \"6000:6000\"\r\n\t\tvolumns:\r\n\t\t\t- /data1:/dta\r\n\t\t\t- /data2:/data2\r\n\t\tdepends_on:\r\n\t\t\t- redis\r\n\t\t\t- mysql\r\n\t\tnetworks:\r\n\t\t\t- xx_net\r\n\tredis:\r\n\t\timage: redis:6.8.0\r\n\t\tports::\r\n\t\t\t- \"6379:6379\"\r\n\t\tvolumns:\r\n\t\t\t- /app/redis/redis.conf:/etc/redis/redis.conf\r\n\t\t\t- /app/redis/data:/data\r\n\t\tcommand: redis-server /etc/redis/redis.conf\r\n\t\tnetworks:\r\n\t\t\t- xx_net\r\n\tmysql:\r\n\t\timage: mysql:5.7\r\n\t\tenvironment:\r\n\t\t\tMYSQL_ROOT_PASSWORD: '12345'\r\n\t\t\tMYSQL_ALLOW_EMPTY_PASSWORD: 'no'\r\n\t\t\tMYSQL_DATABASE: 'db1'\r\n\t\t\tMYSQL_USER: 'ROOT'\r\n\t\t\tMYSQL_PASSWROD: 'ROOT'\r\n\t\tports:\r\n\t\t\t- \"3306:3306\"\r\n\t\tvolumes:\r\n\t\t\t- /app/mysql/db:/var/lib/mysql\r\n            - /app/mysql/conf/my.cnf:/etc/my.cnf\r\n            - /app/mysql/init:/docker-entrypoint-initdb.d\r\n        networks:\r\n        \t- xx_net\r\n        command: --default-authentication-plugin=mysql_native_password # 解决外部无法访问\r\n\t\t\t\r\nnetworks:\r\n\t- xx_net:\r\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"Docker-compose","headers":[{"level":2,"title":"2. 卸载","slug":"_2-卸载","link":"#_2-卸载","children":[]},{"level":2,"title":"3. yml配置文件及常用指令","slug":"_3-yml配置文件及常用指令","link":"#_3-yml配置文件及常用指令","children":[{"level":3,"title":"3.1 yml文件级","slug":"_3-1-yml文件级","link":"#_3-1-yml文件级","children":[]}]},{"level":2,"title":"2. compose常用命令","slug":"_2-compose常用命令","link":"#_2-compose常用命令","children":[]},{"level":2,"title":"3. 伪示例","slug":"_3-伪示例","link":"#_3-伪示例","children":[]}]}}
