{"content":"<h1 id=\"jakarta-servlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#jakarta-servlet\"><span>Jakarta Servlet</span></a></h1>\n<p><em>web组件，过滤器，监听器 这三大组件必须在容器启动之前注册。<code v-pre>必须必须必须</code></em></p>\n<h2 id=\"_1-servlet的定义\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-servlet的定义\"><span>1. Servlet的定义</span></a></h2>\n<p>Servlet 是一种 Java 编程语言类，它直接或间接地实现 jakarta.servlet.Servlet 接口。jakarta.servlet 和 jakarta.servlet.http 包提供了用于编写 servlet 的接口和类。所有 Servlet 都必须实现 jakarta.servlet.Servlet 接口，该接口定义生命周期方法，例如 init、service 和 destroy。在实现通用服务时，您可以扩展已实现 Servlet 接口的 jakarta.servlet.GenericServlet 类。在实现 HTTP 服务时，您可以扩展 jakarta.servlet.http.HttpServlet 类，该类已经扩展了 GenericServlet 类。</p>\n<p>在典型的基于 Jakarta Servlet 的 Web 应用程序中，该类必须扩展 <code v-pre>jakarta.servlet.http.HttpServlet</code> 并覆盖其中一个 <code v-pre>doXxx</code> 方法，其中 <code v-pre>Xxx</code> 表示 HTTP 方法。</p>\n<h2 id=\"_2-servlet的生命周期\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-servlet的生命周期\"><span>2. Servlet的生命周期</span></a></h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> init</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletConfig </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    ServletConfig </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> service</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    String </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletInfo</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> destroy</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>Servlet要求被URL绑定，以使得在访问URL时能映射到对应servlet</li>\n<li>init 方法 ：当servlet对象被创建后进行调用并可获得其配置</li>\n<li>service方法： 每次执行到该servlet时总是调用service方法并获得当前请求、相应对象</li>\n<li>destroy方法：当servlet对象被销毁前调用 执行清理操作</li>\n</ol>\n<p>Servlet 的生命周期由部署了 Servlet 的 Servlet 容器控制。将请求映射到 Servlet 时，Servlet 容器将执行以下步骤：</p>\n<ol>\n<li>\n<p>如果 Servlet 的实例不存在，则 Servlet 容器将：</p>\n<ol>\n<li>加载 servlet 类</li>\n<li>创建 servlet 类的实例</li>\n<li>通过调用 <code v-pre>init</code> 方法初始化 servlet 实例</li>\n</ol>\n</li>\n<li>\n<p>Servlet 容器调用<code v-pre>服务</code>方法，传递请求和响应对象。</p>\n</li>\n</ol>\n<p>如果需要删除 Servlet，则 Servlet 容器通过调用 Servlet 的 destroy 方法完成 Servlet的销毁</p>\n<h3 id=\"_2-1-httpservlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-httpservlet\"><span>2.1 HttpServlet</span></a></h3>\n<blockquote>\n<p>jakarta.servelt.http.HttpServlet 是对 Servlet HTTP 协议的实现</p>\n</blockquote>\n<p>HttpServlet 将根据生命周期执行到 service 生命周期方法后，根据当前的请求方式执行到（doGet, doPost, doPut, doDelete）,对应的Http请求的方法上。</p>\n<figure><img src=\"@source/article/technology/Servlet/assets/image-20250213092757461.png\" alt=\"image-20250213092757461\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213092757461</figcaption></figure>\n<h2 id=\"_3-servlet的注册方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-servlet的注册方式\"><span>3. Servlet的注册方式</span></a></h2>\n<p>Servlet支持三种注册方式：<code v-pre>web.xml</code> , <code v-pre>注解</code>， <code v-pre>api</code></p>\n<h3 id=\"_3-1-web-xml\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-web-xml\"><span>3.1 <em>web.xml</em></span></a></h3>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\" data-title=\"xml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- 定义servlet --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 设置servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 实现servlet接口的类 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x.y.z.servletClassName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- servlet 请求的路径映射 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet请求的url, 例如 /* 拦截所有请求，/a 拦截 xxx/xxx/a的请求 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">/url</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_3-2-注解\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-注解\"><span>3.2 <em>注解</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> com</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">example</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ideamabenjavaweb</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">annotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletResponse</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> value</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> SomeoneServlet</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> extends</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doGet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> HttpServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">        // do something for handling get request...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用 @WebServlet 注释在 Web 应用程序中定义 servlet 组件。此注释在类上指定，并包含有关正在声明的 Servlet 的元数据。带注释的 Servlet 必须至少指定一个 URL 模式。这是通过在 Comments 上使用 urlPatterns 或 value 属性来完成的。所有其他属性都是可选的，具有默认设置。当注释上的唯一属性是 URL 模式时，请使用 value 属性;否则，当同时使用其他属性时，请使用 urlPatterns 属性。</p>\n<p>使用 @WebServlet 注释的类必须<code v-pre>扩展 jakarta.servlet.http.HttpServlet 类</code>.</p>\n<p>Web 容器在加载和实例化 Servlet 类之后，在传递来自客户端的请求之前初始化 Servlet。要自定义此过程以允许 Servlet 读取持久性配置数据、初始化资源和执行任何其他一次性活动，可以覆盖 Servlet 接口的 init 方法或指定 @WebServlet 注释的 initParams 属性。initParams 属性包含 @WebInitParam 注释。如果 Servlet 无法完成其初始化过程，则会引发 UnavailableException</p>\n<h3 id=\"_3-3-servletcontext\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-3-servletcontext\"><span>3.3 ServletContext</span></a></h3>\n<p>使用<code v-pre>ServletContext</code> 可注册 Servlet，注意！！！该注册方式必须要在web容器启动完成之前完成Servlet的注册，一旦web容器启动成功，再使用ServletContext注册就会报错。这是Servlet的一个机制。即一旦容器启动成功后续不允许再修改ServletContext。</p>\n<p>简单示例：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRegistration</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Dynamic</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletClassName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addMapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/url</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果想使用ServletContext注册Servlet，可通过Servlet的机制 <code v-pre>SCI引擎</code>来实现Servlet的注册。<code v-pre>（详见博客的SCI引擎文章）</code></p>\n","env":{"base":"/","filePath":"F:/my_source_code/kylinBachelor.github.io/docs/article/technology/Servlet/Servlet.md","filePathRelative":"article/technology/Servlet/Servlet.md","frontmatter":{"title":"Jakarta Servlet","tags":["Servlet"],"createTime":"2025/02/13 09:45:31"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"jakarta-servlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#jakarta-servlet\"><span>Jakarta Servlet</span></a></h1>\n<p><em>web组件，过滤器，监听器 这三大组件必须在容器启动之前注册。<code v-pre>必须必须必须</code></em></p>\n<h2 id=\"_1-servlet的定义\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-servlet的定义\"><span>1. Servlet的定义</span></a></h2>\n<p>Servlet 是一种 Java 编程语言类，它直接或间接地实现 jakarta.servlet.Servlet 接口。jakarta.servlet 和 jakarta.servlet.http 包提供了用于编写 servlet 的接口和类。所有 Servlet 都必须实现 jakarta.servlet.Servlet 接口，该接口定义生命周期方法，例如 init、service 和 destroy。在实现通用服务时，您可以扩展已实现 Servlet 接口的 jakarta.servlet.GenericServlet 类。在实现 HTTP 服务时，您可以扩展 jakarta.servlet.http.HttpServlet 类，该类已经扩展了 GenericServlet 类。</p>\n<p>在典型的基于 Jakarta Servlet 的 Web 应用程序中，该类必须扩展 <code v-pre>jakarta.servlet.http.HttpServlet</code> 并覆盖其中一个 <code v-pre>doXxx</code> 方法，其中 <code v-pre>Xxx</code> 表示 HTTP 方法。</p>\n<h2 id=\"_2-servlet的生命周期\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-servlet的生命周期\"><span>2. Servlet的生命周期</span></a></h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> init</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletConfig </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    ServletConfig </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> service</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    String </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletInfo</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> destroy</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>Servlet要求被URL绑定，以使得在访问URL时能映射到对应servlet</li>\n<li>init 方法 ：当servlet对象被创建后进行调用并可获得其配置</li>\n<li>service方法： 每次执行到该servlet时总是调用service方法并获得当前请求、相应对象</li>\n<li>destroy方法：当servlet对象被销毁前调用 执行清理操作</li>\n</ol>\n<p>Servlet 的生命周期由部署了 Servlet 的 Servlet 容器控制。将请求映射到 Servlet 时，Servlet 容器将执行以下步骤：</p>\n<ol>\n<li>\n<p>如果 Servlet 的实例不存在，则 Servlet 容器将：</p>\n<ol>\n<li>加载 servlet 类</li>\n<li>创建 servlet 类的实例</li>\n<li>通过调用 <code v-pre>init</code> 方法初始化 servlet 实例</li>\n</ol>\n</li>\n<li>\n<p>Servlet 容器调用<code v-pre>服务</code>方法，传递请求和响应对象。</p>\n</li>\n</ol>\n<p>如果需要删除 Servlet，则 Servlet 容器通过调用 Servlet 的 destroy 方法完成 Servlet的销毁</p>\n<h3 id=\"_2-1-httpservlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-httpservlet\"><span>2.1 HttpServlet</span></a></h3>\n<blockquote>\n<p>jakarta.servelt.http.HttpServlet 是对 Servlet HTTP 协议的实现</p>\n</blockquote>\n<p>HttpServlet 将根据生命周期执行到 service 生命周期方法后，根据当前的请求方式执行到（doGet, doPost, doPut, doDelete）,对应的Http请求的方法上。</p>\n<figure><img src=\"@source/article/technology/Servlet/assets/image-20250213092757461.png\" alt=\"image-20250213092757461\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213092757461</figcaption></figure>\n<h2 id=\"_3-servlet的注册方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-servlet的注册方式\"><span>3. Servlet的注册方式</span></a></h2>\n<p>Servlet支持三种注册方式：<code v-pre>web.xml</code> , <code v-pre>注解</code>， <code v-pre>api</code></p>\n<h3 id=\"_3-1-web-xml\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-web-xml\"><span>3.1 <em>web.xml</em></span></a></h3>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\" data-title=\"xml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- 定义servlet --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 设置servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 实现servlet接口的类 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x.y.z.servletClassName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- servlet 请求的路径映射 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet请求的url, 例如 /* 拦截所有请求，/a 拦截 xxx/xxx/a的请求 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">/url</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_3-2-注解\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-注解\"><span>3.2 <em>注解</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> com</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">example</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ideamabenjavaweb</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">annotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletResponse</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> value</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> SomeoneServlet</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> extends</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doGet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> HttpServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">        // do something for handling get request...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用 @WebServlet 注释在 Web 应用程序中定义 servlet 组件。此注释在类上指定，并包含有关正在声明的 Servlet 的元数据。带注释的 Servlet 必须至少指定一个 URL 模式。这是通过在 Comments 上使用 urlPatterns 或 value 属性来完成的。所有其他属性都是可选的，具有默认设置。当注释上的唯一属性是 URL 模式时，请使用 value 属性;否则，当同时使用其他属性时，请使用 urlPatterns 属性。</p>\n<p>使用 @WebServlet 注释的类必须<code v-pre>扩展 jakarta.servlet.http.HttpServlet 类</code>.</p>\n<p>Web 容器在加载和实例化 Servlet 类之后，在传递来自客户端的请求之前初始化 Servlet。要自定义此过程以允许 Servlet 读取持久性配置数据、初始化资源和执行任何其他一次性活动，可以覆盖 Servlet 接口的 init 方法或指定 @WebServlet 注释的 initParams 属性。initParams 属性包含 @WebInitParam 注释。如果 Servlet 无法完成其初始化过程，则会引发 UnavailableException</p>\n<h3 id=\"_3-3-servletcontext\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-3-servletcontext\"><span>3.3 ServletContext</span></a></h3>\n<p>使用<code v-pre>ServletContext</code> 可注册 Servlet，注意！！！该注册方式必须要在web容器启动完成之前完成Servlet的注册，一旦web容器启动成功，再使用ServletContext注册就会报错。这是Servlet的一个机制。即一旦容器启动成功后续不允许再修改ServletContext。</p>\n<p>简单示例：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRegistration</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Dynamic</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletClassName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addMapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/url</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果想使用ServletContext注册Servlet，可通过Servlet的机制 <code v-pre>SCI引擎</code>来实现Servlet的注册。<code v-pre>（详见博客的SCI引擎文章）</code></p>\n</template>","contentStripped":"<h1 id=\"jakarta-servlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#jakarta-servlet\"><span>Jakarta Servlet</span></a></h1>\n<p><em>web组件，过滤器，监听器 这三大组件必须在容器启动之前注册。<code v-pre>必须必须必须</code></em></p>\n<h2 id=\"_1-servlet的定义\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-servlet的定义\"><span>1. Servlet的定义</span></a></h2>\n<p>Servlet 是一种 Java 编程语言类，它直接或间接地实现 jakarta.servlet.Servlet 接口。jakarta.servlet 和 jakarta.servlet.http 包提供了用于编写 servlet 的接口和类。所有 Servlet 都必须实现 jakarta.servlet.Servlet 接口，该接口定义生命周期方法，例如 init、service 和 destroy。在实现通用服务时，您可以扩展已实现 Servlet 接口的 jakarta.servlet.GenericServlet 类。在实现 HTTP 服务时，您可以扩展 jakarta.servlet.http.HttpServlet 类，该类已经扩展了 GenericServlet 类。</p>\n<p>在典型的基于 Jakarta Servlet 的 Web 应用程序中，该类必须扩展 <code v-pre>jakarta.servlet.http.HttpServlet</code> 并覆盖其中一个 <code v-pre>doXxx</code> 方法，其中 <code v-pre>Xxx</code> 表示 HTTP 方法。</p>\n<h2 id=\"_2-servlet的生命周期\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-servlet的生命周期\"><span>2. Servlet的生命周期</span></a></h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> interface</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> init</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletConfig </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    ServletConfig </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletConfig</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> service</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">var2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> ServletException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    String </span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletInfo</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> destroy</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>Servlet要求被URL绑定，以使得在访问URL时能映射到对应servlet</li>\n<li>init 方法 ：当servlet对象被创建后进行调用并可获得其配置</li>\n<li>service方法： 每次执行到该servlet时总是调用service方法并获得当前请求、相应对象</li>\n<li>destroy方法：当servlet对象被销毁前调用 执行清理操作</li>\n</ol>\n<p>Servlet 的生命周期由部署了 Servlet 的 Servlet 容器控制。将请求映射到 Servlet 时，Servlet 容器将执行以下步骤：</p>\n<ol>\n<li>\n<p>如果 Servlet 的实例不存在，则 Servlet 容器将：</p>\n<ol>\n<li>加载 servlet 类</li>\n<li>创建 servlet 类的实例</li>\n<li>通过调用 <code v-pre>init</code> 方法初始化 servlet 实例</li>\n</ol>\n</li>\n<li>\n<p>Servlet 容器调用<code v-pre>服务</code>方法，传递请求和响应对象。</p>\n</li>\n</ol>\n<p>如果需要删除 Servlet，则 Servlet 容器通过调用 Servlet 的 destroy 方法完成 Servlet的销毁</p>\n<h3 id=\"_2-1-httpservlet\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-httpservlet\"><span>2.1 HttpServlet</span></a></h3>\n<blockquote>\n<p>jakarta.servelt.http.HttpServlet 是对 Servlet HTTP 协议的实现</p>\n</blockquote>\n<p>HttpServlet 将根据生命周期执行到 service 生命周期方法后，根据当前的请求方式执行到（doGet, doPost, doPut, doDelete）,对应的Http请求的方法上。</p>\n<figure><img src=\"@source/article/technology/Servlet/assets/image-20250213092757461.png\" alt=\"image-20250213092757461\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20250213092757461</figcaption></figure>\n<h2 id=\"_3-servlet的注册方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-servlet的注册方式\"><span>3. Servlet的注册方式</span></a></h2>\n<p>Servlet支持三种注册方式：<code v-pre>web.xml</code> , <code v-pre>注解</code>， <code v-pre>api</code></p>\n<h3 id=\"_3-1-web-xml\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-1-web-xml\"><span>3.1 <em>web.xml</em></span></a></h3>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\" data-title=\"xml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- 定义servlet --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 设置servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- 实现servlet接口的类 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x.y.z.servletClassName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-class</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">&#x3C;!-- servlet 请求的路径映射 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet名称 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servletName</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    &#x3C;!-- servlet请求的url, 例如 /* 拦截所有请求，/a 拦截 xxx/xxx/a的请求 --></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    &#x3C;</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">/url</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">url-pattern</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;/</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">servlet-mapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_3-2-注解\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-2-注解\"><span>3.2 <em>注解</em></span></a></h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">package</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> com</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">example</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ideamabenjavaweb</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">annotation</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> jakarta</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">servlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">http</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletResponse</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">import</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> java</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">io</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">IOException</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">@</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">WebServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\">name</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#A65E2B;--shiki-dark:#C99076\"> value</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/someoneServlet</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> SomeoneServlet</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> extends</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> HttpServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    public</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> doGet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">HttpServletRequest </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> HttpServletResponse </span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">response</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        throws</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> IOException </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">        // do something for handling get request...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用 @WebServlet 注释在 Web 应用程序中定义 servlet 组件。此注释在类上指定，并包含有关正在声明的 Servlet 的元数据。带注释的 Servlet 必须至少指定一个 URL 模式。这是通过在 Comments 上使用 urlPatterns 或 value 属性来完成的。所有其他属性都是可选的，具有默认设置。当注释上的唯一属性是 URL 模式时，请使用 value 属性;否则，当同时使用其他属性时，请使用 urlPatterns 属性。</p>\n<p>使用 @WebServlet 注释的类必须<code v-pre>扩展 jakarta.servlet.http.HttpServlet 类</code>.</p>\n<p>Web 容器在加载和实例化 Servlet 类之后，在传递来自客户端的请求之前初始化 Servlet。要自定义此过程以允许 Servlet 读取持久性配置数据、初始化资源和执行任何其他一次性活动，可以覆盖 Servlet 接口的 init 方法或指定 @WebServlet 注释的 initParams 属性。initParams 属性包含 @WebInitParam 注释。如果 Servlet 无法完成其初始化过程，则会引发 UnavailableException</p>\n<h3 id=\"_3-3-servletcontext\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-3-servletcontext\"><span>3.3 ServletContext</span></a></h3>\n<p>使用<code v-pre>ServletContext</code> 可注册 Servlet，注意！！！该注册方式必须要在web容器启动完成之前完成Servlet的注册，一旦web容器启动成功，再使用ServletContext注册就会报错。这是Servlet的一个机制。即一旦容器启动成功后续不允许再修改ServletContext。</p>\n<p>简单示例：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\" data-title=\"java\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletContext</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> request</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">getServletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ServletRegistration</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">Dynamic</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> servletContext</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addServlet</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">servletClassName</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dynamic</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">addMapping</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">/url</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果想使用ServletContext注册Servlet，可通过Servlet的机制 <code v-pre>SCI引擎</code>来实现Servlet的注册。<code v-pre>（详见博客的SCI引擎文章）</code></p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"# Jakarta Servlet\r\n\r\n*web组件，过滤器，监听器 这三大组件必须在容器启动之前注册。`必须必须必须`*\r\n\r\n## 1. Servlet的定义\r\n\r\nServlet 是一种 Java 编程语言类，它直接或间接地实现 jakarta.servlet.Servlet 接口。jakarta.servlet 和 jakarta.servlet.http 包提供了用于编写 servlet 的接口和类。所有 Servlet 都必须实现 jakarta.servlet.Servlet 接口，该接口定义生命周期方法，例如 init、service 和 destroy。在实现通用服务时，您可以扩展已实现 Servlet 接口的 jakarta.servlet.GenericServlet 类。在实现 HTTP 服务时，您可以扩展 jakarta.servlet.http.HttpServlet 类，该类已经扩展了 GenericServlet 类。\r\n\r\n\r\n\r\n在典型的基于 Jakarta Servlet 的 Web 应用程序中，该类必须扩展 `jakarta.servlet.http.HttpServlet` 并覆盖其中一个 `doXxx` 方法，其中 `Xxx` 表示 HTTP 方法。\r\n\r\n\r\n\r\n## 2. Servlet的生命周期\r\n\r\n```java\r\npackage jakarta.servlet;\r\n\r\nimport java.io.IOException;\r\n\r\npublic interface Servlet {\r\n    void init(ServletConfig var1) throws ServletException;\r\n\r\n    ServletConfig getServletConfig();\r\n\r\n    void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;\r\n\r\n    String getServletInfo();\r\n\r\n    void destroy();\r\n}\r\n```\r\n\r\n1. Servlet要求被URL绑定，以使得在访问URL时能映射到对应servlet\r\n2. init 方法 ：当servlet对象被创建后进行调用并可获得其配置\r\n3. service方法： 每次执行到该servlet时总是调用service方法并获得当前请求、相应对象\r\n4. destroy方法：当servlet对象被销毁前调用 执行清理操作\r\n\r\n\r\n\r\nServlet 的生命周期由部署了 Servlet 的 Servlet 容器控制。将请求映射到 Servlet 时，Servlet 容器将执行以下步骤：\r\n\r\n1. 如果 Servlet 的实例不存在，则 Servlet 容器将：\r\n\r\n   1. 加载 servlet 类\r\n   2. 创建 servlet 类的实例\r\n   3. 通过调用 `init` 方法初始化 servlet 实例\r\n\r\n2. Servlet 容器调用`服务`方法，传递请求和响应对象。\r\n\r\n   \r\n\r\n如果需要删除 Servlet，则 Servlet 容器通过调用 Servlet 的 destroy 方法完成 Servlet的销毁\r\n\r\n\r\n\r\n### 2.1 HttpServlet\r\n\r\n>  jakarta.servelt.http.HttpServlet 是对 Servlet HTTP 协议的实现\r\n\r\nHttpServlet 将根据生命周期执行到 service 生命周期方法后，根据当前的请求方式执行到（doGet, doPost, doPut, doDelete）,对应的Http请求的方法上。\r\n\r\n![image-20250213092757461](assets/image-20250213092757461.png)\r\n\r\n\r\n\r\n## 3. Servlet的注册方式\r\n\r\nServlet支持三种注册方式：`web.xml` , `注解`， `api`\r\n\r\n### 3.1 *web.xml*\r\n\r\n```xml\r\n<!-- 定义servlet -->\r\n<servlet>\r\n    <!-- 设置servlet名称 -->\r\n    <servlet-name>servletName</servlet-name>\r\n    <!-- 实现servlet接口的类 -->\r\n    <servlet-class>x.y.z.servletClassName</servlet-class>\r\n</servlet>\r\n\r\n<!-- servlet 请求的路径映射 -->\r\n<servlet-mapping>\r\n    <!-- servlet名称 -->\r\n    <servlet-name>servletName</servlet-name>\r\n    <!-- servlet请求的url, 例如 /* 拦截所有请求，/a 拦截 xxx/xxx/a的请求 -->\r\n    <url-pattern>/url</url-pattern>\r\n</servlet-mapping>\r\n```\r\n\r\n### 3.2 *注解*\r\n\r\n```java\r\npackage com.example.ideamabenjavaweb;\r\n\r\n\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\n\r\nimport java.io.IOException;\r\n\r\n@WebServlet(name = \"someoneServlet\", value = \"/someoneServlet\")\r\npublic class SomeoneServlet extends HttpServlet {\r\n\r\n    public void doGet(HttpServletRequest request, HttpServletResponse response) \r\n        throws IOException {\r\n        \r\n        // do something for handling get request...\r\n        \r\n    }\r\n\r\n}\r\n```\r\n\r\n使用 @WebServlet 注释在 Web 应用程序中定义 servlet 组件。此注释在类上指定，并包含有关正在声明的 Servlet 的元数据。带注释的 Servlet 必须至少指定一个 URL 模式。这是通过在 Comments 上使用 urlPatterns 或 value 属性来完成的。所有其他属性都是可选的，具有默认设置。当注释上的唯一属性是 URL 模式时，请使用 value 属性;否则，当同时使用其他属性时，请使用 urlPatterns 属性。\r\n\r\n使用 @WebServlet 注释的类必须`扩展 jakarta.servlet.http.HttpServlet 类`.\r\n\r\nWeb 容器在加载和实例化 Servlet 类之后，在传递来自客户端的请求之前初始化 Servlet。要自定义此过程以允许 Servlet 读取持久性配置数据、初始化资源和执行任何其他一次性活动，可以覆盖 Servlet 接口的 init 方法或指定 @WebServlet 注释的 initParams 属性。initParams 属性包含 @WebInitParam 注释。如果 Servlet 无法完成其初始化过程，则会引发 UnavailableException\r\n\r\n\r\n\r\n### 3.3 ServletContext\r\n\r\n使用`ServletContext` 可注册 Servlet，注意！！！该注册方式必须要在web容器启动完成之前完成Servlet的注册，一旦web容器启动成功，再使用ServletContext注册就会报错。这是Servlet的一个机制。即一旦容器启动成功后续不允许再修改ServletContext。\r\n\r\n简单示例：\r\n\r\n```java\r\nServletContext servletContext = request.getServletContext();\r\n\r\nServletRegistration.Dynamic dynamic = servletContext.addServlet(\"servletName\", \"servletClassName\");\r\n\r\ndynamic.addMapping(\"/url\");\r\n```\r\n\r\n如果想使用ServletContext注册Servlet，可通过Servlet的机制 `SCI引擎`来实现Servlet的注册。`（详见博客的SCI引擎文章）`","excerpt":"","includedFiles":[],"tasklists":0,"title":"Jakarta Servlet","headers":[{"level":2,"title":"1. Servlet的定义","slug":"_1-servlet的定义","link":"#_1-servlet的定义","children":[]},{"level":2,"title":"2. Servlet的生命周期","slug":"_2-servlet的生命周期","link":"#_2-servlet的生命周期","children":[{"level":3,"title":"2.1 HttpServlet","slug":"_2-1-httpservlet","link":"#_2-1-httpservlet","children":[]}]},{"level":2,"title":"3. Servlet的注册方式","slug":"_3-servlet的注册方式","link":"#_3-servlet的注册方式","children":[{"level":3,"title":"3.1 web.xml","slug":"_3-1-web-xml","link":"#_3-1-web-xml","children":[]},{"level":3,"title":"3.2 注解","slug":"_3-2-注解","link":"#_3-2-注解","children":[]},{"level":3,"title":"3.3 ServletContext","slug":"_3-3-servletcontext","link":"#_3-3-servletcontext","children":[]}]}]}}
